/* =========================
   Global Dark Theme + Hunter Green
   ========================= */
:root{
  /* Core palette */
  --bg:           #0c0f10;   /* page background (dark) */
  --bg-elev:      #121517;   /* cards / panels */
  --bg-elev-2:    #171b1d;
  --text:         #e7ecf0;   /* primary text on dark */
  --text-dim:     #b5c0c8;

  /* HUNTER GREEN accents */
  --brand:        #2f6f3f;   /* hunter green */
  --brand-strong: #235532;   /* darker hover */
  --brand-2:      #89c096;   /* minty secondary */

  --border:       #23292d;
  --ring:         rgba(47,111,63,.35);
  --shadow:       0 6px 24px rgba(0,0,0,.35);

  --radius:       12px;
  --radius-lg:    16px;
  --pad:          14px;
  --pad-lg:       18px;

  --wrap: 1100px;
}

* { box-sizing: border-box; }
html, body { height: 100%; }
html { color-scheme: dark; }
body {
  margin: 0;
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Apple Color Emoji","Segoe UI Emoji";
  background: var(--bg);
  color: var(--text);
  line-height: 1.45;
}

/* Subtle dark “fabric” texture (no image) */
body::before{
  content:"";
  position: fixed;
  inset: 0;
  z-index: 0;
  pointer-events: none;
  background:
    radial-gradient(18px 18px at 24px 24px, rgba(255,255,255,.025) 20%, transparent 21%) 0 0/120px 120px,
    radial-gradient(22px 20px at 90px 60px, rgba(255,255,255,.02) 18%, transparent 19%) 0 0/120px 120px,
    radial-gradient(16px 16px at 50px 100px, rgba(0,0,0,.25) 20%, transparent 21%) 0 0/120px 120px;
  opacity: .6;
}

#___next, #__next, body > div, .site-root, main { position: relative; z-index: 1; }

/* -------- Top Nav: WHITE header, BLACK text -------- */
.site-header {
  background: #ffffff;
  border-bottom: 1px solid #e6e9ec;
  position: sticky;
  top: 0;
  z-index: 10;
}
.site-header .wrap {
  max-width: var(--wrap);
  margin: 0 auto;
  display: flex;
  align-items: center;
  gap: 16px;
  justify-content: space-between;
  padding: 10px 14px;
  flex-wrap: wrap; /* allow wrapping on small screens */
}
.site-header .brand {
  display: flex; align-items: center; gap: 10px; font-weight: 800;
}
.site-header .brand img { height: 28px; }
.site-header .brand a { color: #0b0f12; text-decoration: none; } /* black */

/* --- Mobile menu toggle (CSS-only) --- */
.menu-toggle {
  display: none;
  -webkit-appearance: none; appearance: none;
  background: #0b0f12;
  color: #fff;
  border: 1px solid #0b0f12;
  border-radius: 10px;
  padding: 8px 10px;
  font-weight: 800;
  cursor: pointer;
}
#nav-check { display: none; }

.site-header .menu {
  display: flex; align-items: center; gap: 6px;
  position: relative;
}
.site-header .item {
  color: #0b0f12;                /* black text in header */
  text-decoration: none;
  padding: 8px 10px;
  border-radius: 10px;
  border: 1px solid transparent;
  transition: background .15s ease, color .15s ease, border-color .15s ease;
}
.site-header .item:hover { background: #f2f5f7; border-color: #e6e9ec; }
.site-header .item.active { background: var(--brand); color: #ffffff; }

/* --- Details-based dropdown (mobile & desktop) --- */
.menu .dd { position: relative; }
.menu .dd > summary {
  list-style: none;
  cursor: pointer;
  display: inline-block;
  padding: 8px 10px;
  border-radius: 10px;
  border: 1px solid transparent;
  color: #0b0f12;
}
.menu .dd > summary::-webkit-details-marker { display: none; }
.menu .dd > summary::after { content: "▾"; margin-left: 6px; opacity: .8; }
.menu .dd[open] > summary { background: #f2f5f7; border-color: #e6e9ec; }

.menu .dd .dropdown-menu {
  position: absolute;
  right: 0;
  top: calc(100% + 8px);
  min-width: 220px;
  background: #ffffff;
  border: 1px solid #e6e9ec;
  border-radius: 12px;
  box-shadow: 0 10px 30px rgba(0,0,0,.12);
  padding: 6px;
  z-index: 20;
}
.menu .dd .dropdown-menu a {
  display: block;
  padding: 10px 12px;
  color: #0b0f12;
  text-decoration: none;
  border-radius: 10px;
}
.menu .dd .dropdown-menu a:hover { background: #f2f5f7; }

/* Desktop hover can still reveal the menu via <details open> */
@media (min-width: 761px) {
  .menu .dd:hover .dropdown-menu { display: block; }
}

/* --- Mobile nav behavior --- */
@media (max-width: 760px) {
  .menu-toggle { display: inline-flex; align-items:center; gap:6px; }
  .site-header .menu {
    width: 100%;
    display: none;               /* hide by default on mobile */
    flex-direction: column;
    align-items: stretch;
    gap: 4px;
    margin-top: 8px;
  }
  #nav-check:checked ~ .menu { display: flex; } /* show when toggled */

  /* Dropdown stacks inside the flow on mobile */
  .menu .dd .dropdown-menu {
    position: static;
    top: auto; right: auto;
    box-shadow: none;
    border-radius: 10px;
    border: 1px solid #e6e9ec;
    margin-top: 4px;
  }
}

/* -------- Main Layout -------- */
main { max-width: var(--wrap); margin: 18px auto; padding: 0 14px 40px; }
@media (max-width: 640px) {
  main { padding: 0 12px 28px; }
}

/* Headings */
h1,h2,h3 { color: var(--text); margin: 0 0 10px; }
h1 { font-size: 40px; letter-spacing:.2px; }
h2 { font-size: 26px; }
h3 { font-size: 18px; color: var(--text-dim); }

@media (max-width: 640px) {
  h1 { font-size: 32px; }
  h2 { font-size: 22px; }
  h3 { font-size: 16px; }
}

/* Links (hunter green) */
a { color: var(--brand); }
a:hover { color: var(--brand-2); }

/* Generic card style */
.card {
  background: var(--bg-elev);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
  padding: var(--pad-lg);
  box-shadow: var(--shadow);
}

/* Generic button */
.btn {
  -webkit-appearance: none; appearance: none;
  background: var(--brand);
  color: #ffffff;
  font-weight: 800;
  border: 1px solid transparent;
  border-radius: 10px;
  padding: 9px 14px;
  cursor: pointer;
}
.btn:hover { background: var(--brand-strong); }
.btn:focus { outline: none; box-shadow: 0 0 0 3px var(--ring); }
.btn.secondary {
  background: var(--bg-elev);
  color: var(--text);
  border-color: var(--border);
}

/* Tables (reports) */
.table-wrap { overflow-x: auto; }
.table {
  width: 100%;
  border-collapse: collapse;
  background: var(--bg-elev);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  overflow: hidden;
  min-width: 640px; /* keep columns readable; wrapper scrolls on small screens */
}
.table th, .table td {
  padding: 10px 12px;
  border-bottom: 1px solid var(--border);
  text-align: left;
}
.table th { color: var(--text-dim); font-weight: 700; }
.table tr:hover td { background: var(--bg-elev-2); }

/* Inputs (dark context) */
input, select, textarea {
  background: #0f1416;
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 10px;
  padding: 10px 12px;
  min-height: 42px; /* finger-friendly */
}
@media (min-width: 768px) {
  input, select, textarea { min-height: 36px; }
}
input::placeholder, textarea::placeholder { color: #87939b; }
input:focus, select:focus, textarea:focus {
  outline: none;
  border-color: #2e3740;
  box-shadow: 0 0 0 3px var(--ring);
}

/* --- Checkbox sizing: compact, touch-friendly --- */
input[type="checkbox"] {
  width: 16px;
  height: 16px;
  min-height: 0;              /* override generic input min-height */
  margin: 0 6px 0 0;
  vertical-align: -2px;
  accent-color: #2f6f3f;      /* hunter green */
}
@media (max-width: 640px) {
  input[type="checkbox"] { width: 18px; height: 18px; }
  .checkbox-row, .form-row { gap: 8px; }
  label.checkbox, .checkbox label { font-size: 15px; }
}
/* If any checkbox lives inside a "pill" style, neutralize the pill chrome */
.checkbox-pill, .pill.checkbox, label.pill input[type="checkbox"] {
  padding: 0; border: none; background: transparent;
}

/* Home “cards” grid helper */
.home-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 14px;
}
.home-grid .card h4 { margin: 0; }
.home-grid .card p { margin: 6px 0 0; color: var(--text-dim); }

/* Print stays clean and light */
@media print {
  body { background: #fff !important; color: #000 !important; }
  body::before, .site-header { display: none !important; }
  a { color: #000 !important; text-decoration: none; }
}

/* ===== Light form card on dark site ===== */
.form-card{
  background: #ffffff;                 /* white container */
  color: #0b0f12;                      /* black text inside */
  border: 1px solid #e6e9ec;
  border-radius: 16px;
  box-shadow: 0 10px 30px rgba(0,0,0,.25);
  padding: 14px;
}

/* Make all the usual form elements readable in the light card */
.form-card h1,.form-card h2,.form-card h3,
.form-card p,.form-card span,.form-card div,
.form-card th,.form-card td { color: #0b0f12; }

.form-card .muted { color: #374151; }  /* darker grey for helper text */

/* Inputs/selects/textarea go back to light theme when inside the form card */
.form-card input,
.form-card select,
.form-card textarea{
  background: #ffffff;
  color: #0b0f12;
  border: 1px solid #cbd5e1;
  border-radius: 10px;
}

.form-card input::placeholder,
.form-card textarea::placeholder{ color: #64748b; }

.form-card input:focus,
.form-card select:focus,
.form-card textarea:focus{
  outline: none;
  border-color: #94a3b8;
  box-shadow: 0 0 0 3px rgba(47,111,63,.25);  /* hunter green focus ring */
}

/* The intake “summary” bar looks nicer slightly off-white in the card */
.form-card .summary{
  background: #f8fafc;
  border-color: #e6e9ec;
}

/* Buttons read well against the light card */
.form-card .btn { background: var(--brand); color:#fff; }
.form-card .btn:hover { background: var(--brand-strong); }

/* ===== Force black-on-white for report & simple pages ===== */
.light-page { color: #0b0f12; }
.light-page * { color: #0b0f12 !important; }
.light-page .muted { color: #374151 !important; }

.light-page table th,
.light-page table td { color: #0b0f12 !important; }

.light-page input,
.light-page select,
.light-page textarea{
  background:#fff;
  color:#0b0f12;
  border:1px solid #cbd5e1;
}

.light-page a { color: var(--brand-strong) !important; }
.light-page a:hover { color: var(--brand) !important; }

/* ===== Scan page: dark page, white headings,
         BUT light status bar with BLACK text ===== */
.scan-page,
.scan-page .scan-title,
.scan-page .scan-subtitle {
  color: #ffffff !important;
}

/* Light bar pieces should be black text */
.scan-page .status,
.scan-page .notice,
.scan-page .bar {
  background: #e5e7eb !important;   /* light gray */
  color: #0b0f12 !important;         /* black text */
  border-radius: 10px;
}

/* If the bar contains spans/strong/etc, enforce black */
.scan-page .status *, 
.scan-page .notice *, 
.scan-page .bar * {
  color: #0b0f12 !important;
}

/* Inputs (if any) on scan page */
.scan-page input,
.scan-page select,
.scan-page textarea {
  background: #0f172a !important;
  color: #ffffff !important;
  border: 1px solid #334155 !important;
}
.scan-page input::placeholder,
.scan-page textarea::placeholder { color:#cbd5e1 !important; }

/* Buttons/links */
.scan-page .btn { color:#ffffff !important; }
.scan-page a { color:#ffffff !important; text-decoration: underline; }

/* =========================
   WATERMARK (logo on every page)
   ========================= */
.watermark { position: relative; }
/* Fixed, subtle logo behind content */
.watermark::after {
  content: "";
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 0;                 /* behind everything (header already has higher z) */
  background:
    radial-gradient(transparent, rgba(0,0,0,.45) 70%) center/100% 100% no-repeat,
    url('/mcafee-logo.png') center 60% / 420px auto no-repeat; /* tweak size/position as you like */
  opacity: 0.8;              /* overall strength of the watermark */
  mix-blend-mode: soft-light; /* keeps it tasteful on dark */
  filter: grayscale(100%);
}
/* Ensure main content sits above watermark */
main { position: relative; z-index: 1; }

/* =========================
   HOME (hero + tiles)
   ========================= */
.card-ghost { background: transparent; border: none; box-shadow: none; padding: 0; margin-bottom: 10px; }
.hero { margin-top: 8px; margin-bottom: 8px; }
.hero-kicker { color: var(--brand-2); font-weight: 800; letter-spacing: .06em; text-transform: uppercase; font-size: 12px; margin-bottom: 6px; }
.hero-title { margin: 0 0 6px 0; font-size: 42px; line-height: 1.1; color: var(--text); }
.hero-sub { margin: 0; color: var(--text-dim); font-size: 16px; }

.tile-grid {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: 14px;
  margin-top: 14px;
}
@media (max-width: 980px) { .tile-grid { grid-template-columns: 1fr 1fr; } }
@media (max-width: 640px) {
  .tile-grid { grid-template-columns: 1fr; }
  .hero-title { font-size: 34px; }
  .hero-sub { font-size: 15px; }
}
.tile {
  display: grid;
  grid-template-rows: auto auto 1fr;
  gap: 6px;
  text-decoration: none;
  background: var(--bg-elev);
  border: 1px solid var(--border);
  border-radius: 16px;
  padding: 16px;
  box-shadow: var(--shadow);
  transition: transform .08s ease, border-color .15s ease, background .15s ease;
  outline: none;
}
.tile:hover { transform: translateY(-1px); border-color: rgba(137,192,150,.3); background: var(--bg-elev-2); }
.tile:focus { box-shadow: 0 0 0 3px var(--ring); }
.tile-emoji { font-size: 28px; line-height: 1; }
.tile-title { font-weight: 900; color: #fff; font-size: 18px; }
.tile-sub { color: var(--text-dim); font-size: 14px; }

/* Accent variant */
.tile-alt {
  background: linear-gradient(0deg, rgba(47,111,63,.12), rgba(47,111,63,.12)), var(--bg-elev);
  border-color: rgba(47,111,63,.35);
}

/* Optional: slightly narrower max width so hero + tiles feel balanced */
main { max-width: 1040px; }

/* Ensure light tables never turn dark on hover */
.light-page .table tr:hover td {
  background: #f2f5f7 !important;
  color: #0b0f12 !important;
}

/* Make checkbox + text sit on one row, text to the right */
label.checkbox,
.checkbox label,
label[for][data-checkbox],
.label-checkbox {
  display: inline-flex;         /* text becomes a flex item, not a text flow */
  align-items: flex-start;      /* keep tops aligned */
  gap: 8px;                     /* space between box and words */
  max-width: 100%;              /* allow wrapping to next line as a whole unit */
  vertical-align: top;
}

/* Ensure the checkbox itself doesn’t stretch the row */
label.checkbox > input[type="checkbox"],
.checkbox label > input[type="checkbox"],
label[for][data-checkbox] > input[type="checkbox"] {
  flex: 0 0 auto;               /* fixed-size control */
  width: 18px;
  height: 18px;
  margin: 0;
  margin-top: 2px;              /* optical tweak so box and first line align */
}

/* Long labels can wrap to the next line, still to the RIGHT of the box */
label.checkbox > span,
.checkbox label > span,
label[for][data-checkbox] > span {
  display: inline-block;
  line-height: 1.25;
  white-space: normal;          /* wrap normally */
  word-break: break-word;       /* don’t overflow on long words */
}

/* If you’re mapping a row of checkboxes, let items wrap gracefully */
.checkbox-row, .form-row.checkboxes, .checkbox-group {
  display: flex;
  flex-wrap: wrap;
  gap: 10px 14px;
}

/* Nuke “pill” chrome around checkbox labels so it doesn’t mess layout */
.checkbox-pill, .pill.checkbox, label.pill {
  padding: 0; border: 0; background: transparent;
}
label.pill > input[type="checkbox"] { margin: 0; }

/* ========= MOBILE ALIGNMENT FIXES ========= */

/* 1) Paid pill: keep text inside, centered, no overflow */
button.pill,
.pill {
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  gap: 8px;
  padding: 8px 12px;
  min-height: 34px;
  line-height: 1.1;
  white-space: nowrap;
  overflow: visible; /* don't clip text on small screens */
}
.statusbox .row button.pill { min-width: 84px; }
@media (max-width: 480px) {
  .statusbox .row button.pill { min-width: 74px; padding: 7px 10px; }
}

/* 2) Generic “checkbox + text” pattern:
      text always to the RIGHT of the box; wraps beneath but not under it */
label.checkbox,
.checkbox label,
label.pill,                         /* if you styled checkboxes as pills */
label[for][data-checkbox] {
  display: inline-flex;
  align-items: flex-start;          /* align tops, looks cleaner with multi-line text */
  gap: 8px;
  max-width: 100%;
  vertical-align: top;
}
label.checkbox > input[type="checkbox"],
.checkbox label > input[type="checkbox"],
label.pill > input[type="checkbox"],
label[for][data-checkbox] > input[type="checkbox"] {
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  margin: 0;
  margin-top: 2px;                  /* optically align with first line */
}
label.checkbox > span,
.checkbox label > span,
label.pill > span,
label[for][data-checkbox] > span,
label.checkbox > em,
.checkbox label > em,
label.pill > em {
  display: inline-block;
  line-height: 1.25;
  white-space: normal;              /* wrap naturally */
  word-break: break-word;           /* prevent overflow */
}

/* 3) Intake checkbox groups (hind/front cuts) should wrap into columns nicely */
.checkbox-row,
.form-row.checkboxes,
.checkbox-group {
  display: flex;
  flex-wrap: wrap;
  gap: 8px 12px;                    /* row/column gaps */
}
.checkbox-row > label,
.form-row.checkboxes > label,
.checkbox-group > label {
  flex: 1 1 48%;                    /* two columns by default */
  max-width: 100%;
}
@media (max-width: 520px) {
  .checkbox-row > label,
  .form-row.checkboxes > label,
  .checkbox-group > label {
    flex-basis: 100%;               /* single column on very small screens */
  }
}

/* 4) Normalize any “pill” chrome around checkbox labels so it doesn’t break layout */
.checkbox-pill, .pill.checkbox, label.pill {
  padding: 0; border: none; background: transparent;
}
label.pill > input[type="checkbox"] { margin: 0; }

/* 5) Tighten generic checkbox sizing (don’t inherit big input heights) */
input[type="checkbox"] {
  width: 18px;
  height: 18px;
  min-height: 0;
  margin: 0 6px 0 0;
  vertical-align: -2px;
  accent-color: #2f6f3f;
}

/* 6) Safety net: ANY label that directly contains a checkbox becomes a neat row
   (works even if you don't have .checkbox classes) */
label:has(> input[type="checkbox"]) {
  display: inline-flex;
  align-items: flex-start;
  gap: 8px;
  max-width: 100%;
}
label:has(> input[type="checkbox"]) > :not(input) {
  white-space: normal;
  word-break: break-word;
}

/* ===== Checkbox layout hard reset ===== */

/* 0) Kill stray padding/margins on checkbox labels */
label.checkbox,
.checkbox label,
label[for][data-checkbox],
label.pill {
  padding: 0 !important;
  margin: 0 !important;
  border: 0 !important;
  background: transparent !important;
}

/* 1) Make the label a small horizontal row (text sits right of the box) */
label.checkbox,
.checkbox label,
label[for][data-checkbox],
label:has(> input[type="checkbox"]) {
  display: inline-flex !important;
  flex-direction: row !important;
  align-items: center !important;      /* center the box with the first text line */
  gap: 6px !important;                 /* small space between box and text */
  max-width: 100% !important;
  vertical-align: top;
}

/* 2) The checkbox itself: fixed size, no extra margin pushing text away */
label.checkbox > input[type="checkbox"],
.checkbox label > input[type="checkbox"],
label[for][data-checkbox] > input[type="checkbox"],
label:has(> input[type="checkbox"]) > input[type="checkbox"] {
  flex: 0 0 auto !important;
  width: 18px !important;
  height: 18px !important;
  margin: 0 !important;                /* remove margin that shoves text to the right */
}

/* 3) The text node: let it wrap naturally right next to the box */
label.checkbox > span,
.checkbox label > span,
label[for][data-checkbox] > span,
label:has(> input[type="checkbox"]) > span,
label.checkbox > em,
.checkbox label > em,
label[for][data-checkbox] > em,
label:has(> input[type="checkbox"]) > em {
  display: inline !important;          /* inline prevents vertical stacking in a column */
  line-height: 1.25;
  white-space: normal !important;      /* wrap normally */
  word-break: break-word;
}

/* 4) Groups: stop forcing half-width columns on small screens */
.checkbox-row,
.form-row.checkboxes,
.checkbox-group {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: 8px 12px;
}

/* let each label size to content instead of 48% columns */
.checkbox-row > label,
.form-row.checkboxes > label,
.checkbox-group > label {
  flex: 0 0 auto !important;
}

/* 5) Checkbox control sizing (keeps them compact) */
input[type="checkbox"] {
  width: 18px;
  height: 18px;
  min-height: 0;
  margin: 0;
  accent-color: #2f6f3f;
}

/* 6) If any of those checkboxes were styled as "pills", neutralize that */
.checkbox-pill,
.pill.checkbox,
label.pill {
  padding: 0 !important;
  border: none !important;
  background: transparent !important;
}

/* =========================
   FINAL — Paid pill fix in summary block
   ========================= */

/* Ensure each summary row (inside the Paid/Status box) is a clean flex row */
.statusbox .row {
  display: flex !important;
  align-items: center !important;
  gap: 8px !important;
  flex-wrap: nowrap !important;
}

/* The label area in the row shouldn’t push/overlap anything */
.statusbox .row .label {
  flex: 0 0 auto !important;
  margin: 0 !important;
}

/* The pill itself behaves as a proper chip and keeps text inside/centered */
.statusbox .row .pill,
.statusbox .row button.pill {
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  gap: 6px !important;
  padding: 6px 12px !important;
  min-height: 32px !important;
  line-height: 1.1 !important;
  border-radius: 9999px !important;
  font-weight: 800 !important;
  white-space: nowrap !important;
  max-width: 100% !important;
  flex: 0 0 auto !important;
  margin: 0 !important;
}

/* State colors (keep if you already theme these) */
.statusbox .row .pill.on,
.statusbox .row button.pill.on {
  background: var(--brand) !important;
  color: #fff !important;
  border: 1px solid transparent !important;
}
.statusbox .row .pill:not(.on),
.statusbox .row button.pill:not(.on) {
  background: #e5e7eb !important;
  color: #0b0f12 !important;
  border: 1px solid #d1d5db !important;
}

/* Slightly tighter on narrow phones */
@media (max-width: 480px) {
  .statusbox .row .pill,
  .statusbox .row button.pill {
    font-size: 13px !important;
    padding: 6px 10px !important;
    min-width: 78px !important; /* keeps PAID/UNPAID fully visible */
  }
}
