{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/lib/api.ts"],"sourcesContent":["// lib/api.ts — hardened against AbortError + clearer errors\r\n\r\nexport type Job = {\r\n  tag?: string;\r\n  customer?: string;\r\n  phone?: string;\r\n  dropoff?: string;\r\n\r\n  status?: string;\r\n  capingStatus?: string;\r\n  webbsStatus?: string;\r\n\r\n  callAttempts?: number;\r\n  lastCallAt?: string;\r\n  lastCalledBy?: string;\r\n  callNotes?: string;\r\n\r\n  confirmation?: string;\r\n  email?: string;\r\n  address?: string; city?: string; state?: string; zip?: string;\r\n  county?: string; sex?: string; processType?: string;\r\n  steak?: string; steakOther?: string; burgerSize?: string; steaksPerPackage?: string; beefFat?: boolean;\r\n  hindRoastCount?: string; frontRoastCount?: string;\r\n  backstrapPrep?: string; backstrapThickness?: string; backstrapThicknessOther?: string;\r\n  specialtyProducts?: boolean; summerSausageLbs?: string | number; summerSausageCheeseLbs?: string | number; slicedJerkyLbs?: string | number; specialtyPounds?: string;\r\n  notes?: string;\r\n  webbsOrder?: boolean; webbsFormNumber?: string; webbsPounds?: string;\r\n  price?: number | string; priceProcessing?: number | string; priceSpecialty?: number | string;\r\n  Paid?: boolean; paid?: boolean; paidProcessing?: boolean; paidSpecialty?: boolean;\r\n};\r\n\r\nconst PROXY = '/api/gas2';\r\n\r\nfunction urlForGet(params: Record<string, string>) {\r\n  const q = new URLSearchParams(params).toString();\r\n  return `${PROXY}?${q}`;\r\n}\r\n\r\nfunction withTimeout(ms: number): { signal: AbortSignal; cancel: () => void } {\r\n  const ctrl = new AbortController();\r\n  const id = setTimeout(() => ctrl.abort(), ms);\r\n  return { signal: ctrl.signal, cancel: () => clearTimeout(id) };\r\n}\r\n\r\nasync function fetchJSON<T>(input: string, init?: RequestInit): Promise<T> {\r\n  const { signal, cancel } = withTimeout(20000); // 20s\r\n  try {\r\n    const res = await fetch(input, {\r\n      ...init,\r\n      signal,\r\n      headers: { 'Content-Type': 'application/json', ...(init?.headers || {}) },\r\n      cache: 'no-store',\r\n      keepalive: false,\r\n    });\r\n\r\n    // Read raw text first so we can show upstream HTML or text errors\r\n    const text = await res.text().catch(() => '');\r\n    let data: any = null;\r\n    try { data = text ? JSON.parse(text) : null; } catch { /* non-JSON */ }\r\n\r\n    if (!res.ok) {\r\n      const msg = (data && data.error) ? data.error : (text || `HTTP ${res.status}`);\r\n      throw new Error(msg);\r\n    }\r\n    return (data ?? {}) as T;\r\n  } catch (err: any) {\r\n    // Map aborted requests to a clear message\r\n    if (err?.name === 'AbortError') {\r\n      throw new Error('Request timed out');\r\n    }\r\n    throw new Error(err?.message || 'Network error');\r\n  } finally {\r\n    cancel();\r\n  }\r\n}\r\n\r\n/* ---------- API wrappers ---------- */\r\n\r\nexport async function searchJobs(q: string) {\r\n  const path = urlForGet({ action: 'search', q });\r\n  const j = await fetchJSON<{ ok: boolean; rows?: Job[]; jobs?: Job[]; results?: Job[]; total?: number }>(path);\r\n  return { ...j, rows: j.rows || j.results || j.jobs || [] };\r\n}\r\n\r\nexport async function getJob(tag: string) {\r\n  const path = urlForGet({ action: 'get', tag });\r\n  return fetchJSON<{ ok: boolean; exists?: boolean; job?: Job }>(path);\r\n}\r\n\r\nexport async function saveJob(job: Job) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'save', job }),\r\n  });\r\n}\r\n\r\nexport async function progress(payload: { tag: string }) {\r\n  return fetchJSON<{ ok: boolean; nextStatus?: string }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'progress', tag: payload.tag }),\r\n  });\r\n}\r\n\r\n// NO STATUS FLIP — just increments attempts and appends notes\r\nexport async function logCallSimple(payload: { tag: string; reason?: string; notes?: string }) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'log-call', ...payload }),\r\n  });\r\n}\r\n\r\n// STATUS FLIP to \"Called\" in the appropriate column (meat/cape/webbs)\r\nexport async function markCalled(payload: { tag: string; scope?: 'auto' | 'meat' | 'cape' | 'webbs'; notes?: string }) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'markCalled', tag: payload.tag, scope: payload.scope || 'auto', notes: payload.notes || '' }),\r\n  });\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,4DAA4D;;;;;;;;;;;;;;;AA+B5D,MAAM,QAAQ;AAEd,SAAS,UAAU,MAA8B;IAC/C,MAAM,IAAI,IAAI,gBAAgB,QAAQ,QAAQ;IAC9C,OAAO,GAAG,MAAM,CAAC,EAAE,GAAG;AACxB;AAEA,SAAS,YAAY,EAAU;IAC7B,MAAM,OAAO,IAAI;IACjB,MAAM,KAAK,WAAW,IAAM,KAAK,KAAK,IAAI;IAC1C,OAAO;QAAE,QAAQ,KAAK,MAAM;QAAE,QAAQ,IAAM,aAAa;IAAI;AAC/D;AAEA,eAAe,UAAa,KAAa,EAAE,IAAkB;IAC3D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,YAAY,QAAQ,MAAM;IACrD,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,OAAO;YAC7B,GAAG,IAAI;YACP;YACA,SAAS;gBAAE,gBAAgB;gBAAoB,GAAI,MAAM,WAAW,CAAC,CAAC;YAAE;YACxE,OAAO;YACP,WAAW;QACb;QAEA,kEAAkE;QAClE,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAC1C,IAAI,OAAY;QAChB,IAAI;YAAE,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ;QAAM,EAAE,OAAM,CAAiB;QAEtE,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,MAAM,AAAC,QAAQ,KAAK,KAAK,GAAI,KAAK,KAAK,GAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,MAAM,EAAE;YAC7E,MAAM,IAAI,MAAM;QAClB;QACA,OAAQ,QAAQ,CAAC;IACnB,EAAE,OAAO,KAAU;QACjB,0CAA0C;QAC1C,IAAI,KAAK,SAAS,cAAc;YAC9B,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,IAAI,MAAM,KAAK,WAAW;IAClC,SAAU;QACR;IACF;AACF;AAIO,eAAe,WAAW,CAAS;IACxC,MAAM,OAAO,UAAU;QAAE,QAAQ;QAAU;IAAE;IAC7C,MAAM,IAAI,MAAM,UAAwF;IACxG,OAAO;QAAE,GAAG,CAAC;QAAE,MAAM,EAAE,IAAI,IAAI,EAAE,OAAO,IAAI,EAAE,IAAI,IAAI,EAAE;IAAC;AAC3D;AAEO,eAAe,OAAO,GAAW;IACtC,MAAM,OAAO,UAAU;QAAE,QAAQ;QAAO;IAAI;IAC5C,OAAO,UAAwD;AACjE;AAEO,eAAe,QAAQ,GAAQ;IACpC,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAQ;QAAI;IAC7C;AACF;AAEO,eAAe,SAAS,OAAwB;IACrD,OAAO,UAAgD,OAAO;QAC5D,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAY,KAAK,QAAQ,GAAG;QAAC;IAC9D;AACF;AAGO,eAAe,cAAc,OAAyD;IAC3F,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAY,GAAG,OAAO;QAAC;IACxD;AACF;AAGO,eAAe,WAAW,OAAoF;IACnH,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAc,KAAK,QAAQ,GAAG;YAAE,OAAO,QAAQ,KAAK,IAAI;YAAQ,OAAO,QAAQ,KAAK,IAAI;QAAG;IAC5H;AACF","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/search/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport type { Job } from '@/lib/api';\r\nimport { searchJobs } from '@/lib/api';\r\n\r\nexport default function SearchPage() {\r\n  const router = useRouter();\r\n\r\n  const [q, setQ] = useState('');\r\n  const [rows, setRows] = useState<Job[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState<string | null>(null);\r\n  const debounced = useDebounced(q, 300);\r\n\r\n  // Only search when there is a non-empty query\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    const run = async () => {\r\n      const term = debounced.trim();\r\n      if (!term) {\r\n        setRows([]);\r\n        setErr(null);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      setErr(null);\r\n      try {\r\n        const res = await searchJobs(term);\r\n        if (!cancelled) setRows(res.rows || []);\r\n      } catch (e: any) {\r\n        if (!cancelled) {\r\n          setErr(e?.message || 'Search failed');\r\n          setRows([]);\r\n        }\r\n      } finally {\r\n        if (!cancelled) setLoading(false);\r\n      }\r\n    };\r\n    run();\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n  }, [debounced]);\r\n\r\n  const openTag = (tag: string) => {\r\n    if (!tag) return;\r\n    router.push(`/intake?tag=${encodeURIComponent(tag)}`);\r\n  };\r\n\r\n  const canShowResults = q.trim().length > 0;\r\n\r\n  return (\r\n    <main>\r\n      <h1>Search</h1>\r\n      <p className=\"muted\" style={{ marginTop: 4, marginBottom: 12 }}>\r\n        Type a <b>tag</b>, <b>name</b>, <b>phone</b>, or status text. Shortcuts: <code>@report</code> (ready to call) · <code>@recall</code> (called).\r\n      </p>\r\n\r\n      <div className=\"card\" style={{ padding: 12, marginBottom: 16 }}>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            // no-op; we already debounce on type\r\n          }}\r\n          style={{ display: 'flex', gap: 8, alignItems: 'center' }}\r\n        >\r\n          <input\r\n            value={q}\r\n            onChange={(e) => setQ(e.target.value)}\r\n            placeholder=\"e.g. 12345 or Jane Doe or (555) 123-4567\"\r\n            aria-label=\"Search query\"\r\n            style={{ flex: 1 }}\r\n          />\r\n          <button className=\"btn\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Before typing, keep the page clean */}\r\n      {!canShowResults && (\r\n        <div className=\"card\" style={{ padding: 14 }}>\r\n          Start typing to search…\r\n        </div>\r\n      )}\r\n\r\n      {/* Results / states only render after user typed something */}\r\n      {canShowResults && (\r\n        <>\r\n          {loading && <div className=\"card\">Loading…</div>}\r\n          {err && <div className=\"card\" style={{ borderColor: '#ef4444' }}>Error: {err}</div>}\r\n\r\n          {!loading && !err && (\r\n            <div className=\"card\" style={{ padding: 0, overflow: 'hidden' }}>\r\n              <table className=\"table\" style={{ width: '100%' }}>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ width: 110 }}>Tag</th>\r\n                    <th>Customer</th>\r\n                    <th style={{ width: 160 }}>Phone</th>\r\n                    <th style={{ width: 140 }}>Drop-off</th>\r\n                    <th>Status</th>\r\n                    <th>Caping</th>\r\n                    <th>Webbs</th>\r\n                    <th style={{ width: 110 }} />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.length === 0 && (\r\n                    <tr>\r\n                      <td colSpan={8} style={{ padding: 14 }}>No results.</td>\r\n                    </tr>\r\n                  )}\r\n                  {rows.map((r) => (\r\n                    <tr\r\n                      key={r.tag}\r\n                      onDoubleClick={() => openTag(r.tag!)}\r\n                      style={{ cursor: 'pointer' }}\r\n                      title=\"Double-click to open\"\r\n                    >\r\n                      <td><strong>{r.tag}</strong></td>\r\n                      <td>{r.customer || '—'}</td>\r\n                      <td>{r.phone || '—'}</td>\r\n                      <td>{r.dropoff || '—'}</td>\r\n                      <td>{r.status || '—'}</td>\r\n                      <td>{r.capingStatus || '—'}</td>\r\n                      <td>{r.webbsStatus || '—'}</td>\r\n                      <td>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            openTag(r.tag!);\r\n                          }}\r\n                        >\r\n                          Open\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\n/* ---- tiny hook: debounce any string value ---- */\r\nfunction useDebounced(value: string, delay = 300) {\r\n  const [v, setV] = useState(value);\r\n  useEffect(() => {\r\n    const t = setTimeout(() => setV(value), delay);\r\n    return () => clearTimeout(t);\r\n  }, [value, delay]);\r\n  return v;\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}