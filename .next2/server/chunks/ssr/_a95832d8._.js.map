{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/lib/api.ts"],"sourcesContent":["const BASE = '/api/gas2';\r\n\r\nexport type GetJobResp = { ok: boolean; exists: boolean; job?: any; error?: string };\r\nexport type SaveResp   = { ok: boolean; error?: string; row?: number };\r\nexport type ProgressResp = { ok: boolean; nextStatus?: 'Processing'|'Finished'|null; error?: string };\r\n\r\nexport type SearchJobsResp = {\r\n  ok: boolean;\r\n  rows: any[];\r\n  total?: number;\r\n  error?: string;\r\n  jobs?: any[];\r\n  results?: any[];\r\n  raw?: any;\r\n};\r\n\r\nasync function fetchJson(url: string, init?: RequestInit, attempts = 3, timeoutMs = 7000) {\r\n  let lastErr: any = null;\r\n  for (let i = 0; i < attempts; i++) {\r\n    const ctrl = new AbortController();\r\n    const to = setTimeout(() => ctrl.abort(), timeoutMs);\r\n    try {\r\n      const res = await fetch(url, { cache: 'no-store', ...init, signal: ctrl.signal });\r\n      clearTimeout(to);\r\n      const data = await res.json().catch(() => ({}));\r\n      if (res.ok) return data;\r\n      lastErr = (data as any)?.error || `HTTP ${res.status}`;\r\n      if ([429, 502, 503, 504].includes(res.status)) {\r\n        await new Promise(r => setTimeout(r, 250 * (i + 1)));\r\n        continue;\r\n      }\r\n      break;\r\n    } catch (e: any) {\r\n      clearTimeout(to);\r\n      lastErr = e?.name === 'AbortError' ? 'Request timed out' : (e?.message || e);\r\n      await new Promise(r => setTimeout(r, 250 * (i + 1)));\r\n    }\r\n  }\r\n  return { ok: false, error: String(lastErr || 'Network error') };\r\n}\r\n\r\nexport async function getJob(tag: string): Promise<GetJobResp> {\r\n  return fetchJson(`${BASE}/get?tag=${encodeURIComponent(tag)}`);\r\n}\r\n\r\nexport async function saveJob(job: any): Promise<SaveResp> {\r\n  return fetchJson(`${BASE}/save`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type':'application/json' },\r\n    body: JSON.stringify({ job })\r\n  });\r\n}\r\n\r\nexport async function progress(tag: string): Promise<ProgressResp> {\r\n  return fetchJson(`${BASE}/progress`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type':'application/json' },\r\n    body: JSON.stringify({ tag })\r\n  });\r\n}\r\n\r\nexport async function searchJobs(\r\n  opts?: string | { q?: string; status?: string; limit?: number; offset?: number }\r\n): Promise<SearchJobsResp> {\r\n  const o = typeof opts === 'string' ? { q: opts } : (opts || {});\r\n  const p = new URLSearchParams();\r\n  if (o.q) p.set('q', o.q as string);\r\n  if (typeof (o as any).status === 'string') p.set('status', (o as any).status as string);\r\n  if ((o as any).limit != null) p.set('limit', String((o as any).limit));\r\n  if (o as any && (o as any).offset != null) p.set('offset', String((o as any).offset));\r\n\r\n  const data: any = await fetchJson(`${BASE}/search?${p.toString()}`);\r\n  const rows =\r\n    Array.isArray(data?.jobs)    ? data.jobs :\r\n    Array.isArray(data?.rows)    ? data.rows :\r\n    Array.isArray(data?.results) ? data.results :\r\n    Array.isArray(data)          ? data :\r\n    [];\r\n\r\n  const ok = !!data?.ok || Array.isArray(rows);\r\n  const total = (typeof data?.total === 'number' ? data.total : rows.length) as number | undefined;\r\n\r\n  return {\r\n    ok,\r\n    rows,\r\n    total,\r\n    error: data?.error,\r\n    jobs: rows,\r\n    results: rows,\r\n    raw: data\r\n  };\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA,MAAM,OAAO;AAgBb,eAAe,UAAU,GAAW,EAAE,IAAkB,EAAE,WAAW,CAAC,EAAE,YAAY,IAAI;IACtF,IAAI,UAAe;IACnB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;QACjC,MAAM,OAAO,IAAI;QACjB,MAAM,KAAK,WAAW,IAAM,KAAK,KAAK,IAAI;QAC1C,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,KAAK;gBAAE,OAAO;gBAAY,GAAG,IAAI;gBAAE,QAAQ,KAAK,MAAM;YAAC;YAC/E,aAAa;YACb,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YAC7C,IAAI,IAAI,EAAE,EAAE,OAAO;YACnB,UAAU,AAAC,MAAc,SAAS,CAAC,KAAK,EAAE,IAAI,MAAM,EAAE;YACtD,IAAI;gBAAC;gBAAK;gBAAK;gBAAK;aAAI,CAAC,QAAQ,CAAC,IAAI,MAAM,GAAG;gBAC7C,MAAM,IAAI,QAAQ,CAAA,IAAK,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;gBACjD;YACF;YACA;QACF,EAAE,OAAO,GAAQ;YACf,aAAa;YACb,UAAU,GAAG,SAAS,eAAe,sBAAuB,GAAG,WAAW;YAC1E,MAAM,IAAI,QAAQ,CAAA,IAAK,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;QACnD;IACF;IACA,OAAO;QAAE,IAAI;QAAO,OAAO,OAAO,WAAW;IAAiB;AAChE;AAEO,eAAe,OAAO,GAAW;IACtC,OAAO,UAAU,GAAG,KAAK,SAAS,EAAE,mBAAmB,MAAM;AAC/D;AAEO,eAAe,QAAQ,GAAQ;IACpC,OAAO,UAAU,GAAG,KAAK,KAAK,CAAC,EAAE;QAC/B,QAAQ;QACR,SAAS;YAAE,gBAAe;QAAmB;QAC7C,MAAM,KAAK,SAAS,CAAC;YAAE;QAAI;IAC7B;AACF;AAEO,eAAe,SAAS,GAAW;IACxC,OAAO,UAAU,GAAG,KAAK,SAAS,CAAC,EAAE;QACnC,QAAQ;QACR,SAAS;YAAE,gBAAe;QAAmB;QAC7C,MAAM,KAAK,SAAS,CAAC;YAAE;QAAI;IAC7B;AACF;AAEO,eAAe,WACpB,IAAgF;IAEhF,MAAM,IAAI,OAAO,SAAS,WAAW;QAAE,GAAG;IAAK,IAAK,QAAQ,CAAC;IAC7D,MAAM,IAAI,IAAI;IACd,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC;IACvB,IAAI,OAAO,AAAC,EAAU,MAAM,KAAK,UAAU,EAAE,GAAG,CAAC,UAAU,AAAC,EAAU,MAAM;IAC5E,IAAI,AAAC,EAAU,KAAK,IAAI,MAAM,EAAE,GAAG,CAAC,SAAS,OAAO,AAAC,EAAU,KAAK;IACpE,IAAI,KAAY,AAAC,EAAU,MAAM,IAAI,MAAM,EAAE,GAAG,CAAC,UAAU,OAAO,AAAC,EAAU,MAAM;IAEnF,MAAM,OAAY,MAAM,UAAU,GAAG,KAAK,QAAQ,EAAE,EAAE,QAAQ,IAAI;IAClE,MAAM,OACJ,MAAM,OAAO,CAAC,MAAM,QAAW,KAAK,IAAI,GACxC,MAAM,OAAO,CAAC,MAAM,QAAW,KAAK,IAAI,GACxC,MAAM,OAAO,CAAC,MAAM,WAAW,KAAK,OAAO,GAC3C,MAAM,OAAO,CAAC,QAAiB,OAC/B,EAAE;IAEJ,MAAM,KAAK,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,CAAC;IACvC,MAAM,QAAS,OAAO,MAAM,UAAU,WAAW,KAAK,KAAK,GAAG,KAAK,MAAM;IAEzE,OAAO;QACL;QACA;QACA;QACA,OAAO,MAAM;QACb,MAAM;QACN,SAAS;QACT,KAAK;IACP;AACF","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/search/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { searchJobs } from '@/lib/api';\r\n\r\ntype Row = {\r\n  row?: number;\r\n  tag: string;\r\n  customer?: string; // sometimes \"Customer Name\"\r\n  name?: string;     // sometimes \"Customer\"\r\n  phone?: string;\r\n  status?: string;\r\n  dropoff?: string;\r\n  url?: string;      // optional deep-link from backend\r\n};\r\n\r\nexport default function SearchPage() {\r\n  const [q, setQ] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState<string>('');\r\n  const [rows, setRows] = useState<Row[]>([]);\r\n\r\n  // keep it simple: require 2+ chars before searching\r\n  const debouncedQ = useMemo(() => q.trim(), [q]);\r\n\r\n  useEffect(() => {\r\n    const t = setTimeout(async () => {\r\n      setErr('');\r\n      if (debouncedQ.length < 2) {\r\n        setRows([]);\r\n        return;\r\n      }\r\n      try {\r\n        setLoading(true);\r\n        // explicit object call matches our helper -> /api/gas/search\r\n        const res = await searchJobs({ q: debouncedQ, limit: 50, offset: 0 });\r\n        if (!res?.ok) {\r\n          setErr(res?.error || 'Search failed');\r\n          setRows([]);\r\n        } else {\r\n          setRows((res.rows || []) as Row[]);\r\n        }\r\n      } catch (e: any) {\r\n        setErr(e?.message || 'Search failed');\r\n        setRows([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }, 250);\r\n    return () => clearTimeout(t);\r\n  }, [debouncedQ]);\r\n\r\n  return (\r\n    <div className=\"wrap\">\r\n      <h2>Search</h2>\r\n\r\n      <div className=\"bar\">\r\n        <input\r\n          value={q}\r\n          onChange={(e) => setQ(e.target.value)}\r\n          placeholder=\"Search by tag, name, or phone…\"\r\n          aria-label=\"Search\"\r\n        />\r\n        <div className=\"hint\">Type at least 2 characters</div>\r\n      </div>\r\n\r\n      {err && <div className=\"err\">{err}</div>}\r\n      {loading && <div className=\"muted\">Searching…</div>}\r\n      {!loading && !err && debouncedQ && rows.length === 0 && (\r\n        <div className=\"muted\">No matches.</div>\r\n      )}\r\n\r\n      {rows.length > 0 && (\r\n        <table className=\"tbl\">\r\n          <thead>\r\n            <tr>\r\n              <th>Tag</th>\r\n              <th>Customer</th>\r\n              <th>Phone</th>\r\n              <th>Status</th>\r\n              <th>Drop-off</th>\r\n              <th>Open</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((r, i) => {\r\n              const tag = r.tag;\r\n              const customer = r.customer || r.name || '—';\r\n              // open the butcher-friendly intake by default\r\n              const href = `/intake?tag=${encodeURIComponent(r.tag)}`;\r\n              return (\r\n                <tr key={`${tag}-${r.row ?? i}`}>\r\n                  <td>{tag}</td>\r\n                  <td>{customer}</td>\r\n                  <td>{r.phone || ''}</td>\r\n                  <td>{r.status || ''}</td>\r\n                  <td>{r.dropoff || ''}</td>\r\n                  <td><Link href={href}>Open</Link></td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      <style jsx>{`\r\n        .wrap { max-width: 900px; margin: 16px auto; padding: 12px; font-family: Arial, sans-serif; }\r\n        h2 { margin: 0 0 8px; }\r\n        .bar { display: grid; grid-template-columns: 1fr auto; gap: 8px; align-items: end; margin-bottom: 10px; }\r\n        input { width: 100%; padding: 8px 10px; border: 1px solid #d8e3f5; border-radius: 8px; }\r\n        .hint { font-size: 12px; color: #6b7280; }\r\n        .muted { color: #6b7280; font-size: 14px; margin-top: 8px; }\r\n        .err { color: #b91c1c; margin-top: 8px; }\r\n        .tbl { width: 100%; border-collapse: collapse; margin-top: 12px; }\r\n        th, td { border: 1px solid #e5e7eb; padding: 6px 8px; text-align: left; vertical-align: middle; }\r\n        thead th { background: #f3f4f6; }\r\n        tbody tr:hover { background: #fafafa; }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;;;;;;AAiBe,SAAS;IACtB,MAAM,CAAC,GAAG,KAAK,GAAG,IAAA,iNAAQ,EAAC;IAC3B,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,iNAAQ,EAAS;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAQ,EAAE;IAE1C,oDAAoD;IACpD,MAAM,aAAa,IAAA,gNAAO,EAAC,IAAM,EAAE,IAAI,IAAI;QAAC;KAAE;IAE9C,IAAA,kNAAS,EAAC;QACR,MAAM,IAAI,WAAW;YACnB,OAAO;YACP,IAAI,WAAW,MAAM,GAAG,GAAG;gBACzB,QAAQ,EAAE;gBACV;YACF;YACA,IAAI;gBACF,WAAW;gBACX,6DAA6D;gBAC7D,MAAM,MAAM,MAAM,IAAA,wHAAU,EAAC;oBAAE,GAAG;oBAAY,OAAO;oBAAI,QAAQ;gBAAE;gBACnE,IAAI,CAAC,KAAK,IAAI;oBACZ,OAAO,KAAK,SAAS;oBACrB,QAAQ,EAAE;gBACZ,OAAO;oBACL,QAAS,IAAI,IAAI,IAAI,EAAE;gBACzB;YACF,EAAE,OAAO,GAAQ;gBACf,OAAO,GAAG,WAAW;gBACrB,QAAQ,EAAE;YACZ,SAAU;gBACR,WAAW;YACb;QACF,GAAG;QACH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;KAAW;IAEf,qBACE,8OAAC;kDAAc;;0BACb,8OAAC;;0BAAG;;;;;;0BAEJ,8OAAC;0DAAc;;kCACb,8OAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,KAAK,EAAE,MAAM,CAAC,KAAK;wBACpC,aAAY;wBACZ,cAAW;;;;;;;kCAEb,8OAAC;kEAAc;kCAAO;;;;;;;;;;;;YAGvB,qBAAO,8OAAC;0DAAc;0BAAO;;;;;;YAC7B,yBAAW,8OAAC;0DAAc;0BAAQ;;;;;;YAClC,CAAC,WAAW,CAAC,OAAO,cAAc,KAAK,MAAM,KAAK,mBACjD,8OAAC;0DAAc;0BAAQ;;;;;;YAGxB,KAAK,MAAM,GAAG,mBACb,8OAAC;0DAAgB;;kCACf,8OAAC;;kCACC,cAAA,8OAAC;;;8CACC,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;;;;;;;;;;;;kCAGR,8OAAC;;kCACE,KAAK,GAAG,CAAC,CAAC,GAAG;4BACZ,MAAM,MAAM,EAAE,GAAG;4BACjB,MAAM,WAAW,EAAE,QAAQ,IAAI,EAAE,IAAI,IAAI;4BACzC,8CAA8C;4BAC9C,MAAM,OAAO,CAAC,YAAY,EAAE,mBAAmB,EAAE,GAAG,GAAG;4BACvD,qBACE,8OAAC;;;kDACC,8OAAC;;kDAAI;;;;;;kDACL,8OAAC;;kDAAI;;;;;;kDACL,8OAAC;;kDAAI,EAAE,KAAK,IAAI;;;;;;kDAChB,8OAAC;;kDAAI,EAAE,MAAM,IAAI;;;;;;kDACjB,8OAAC;;kDAAI,EAAE,OAAO,IAAI;;;;;;kDAClB,8OAAC;;kDAAG,cAAA,8OAAC,uKAAI;4CAAC,MAAM;sDAAM;;;;;;;;;;;;+BANf,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,GAAG;;;;;wBASnC;;;;;;;;;;;;;;;;;;;;;;AAoBZ","debugId":null}}]
}