{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/lib/api.ts"],"sourcesContent":["// app/api/gas2/route.ts\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nconst GAS_BASE =\r\n  process.env.GAS_BASE ||\r\n  process.env.NEXT_PUBLIC_GAS_BASE ||\r\n  '';\r\n\r\nconst GAS_TOKEN = process.env.GAS_TOKEN || process.env.NEXT_PUBLIC_GAS_TOKEN || ''; // optional\r\n\r\nconst TIMEOUT_MS = 15000;\r\n\r\nfunction withQuery(url: string, qs: Record<string, string | number | undefined>) {\r\n  const u = new URL(url);\r\n  for (const [k, v] of Object.entries(qs)) {\r\n    if (v !== undefined && v !== null && String(v) !== '') {\r\n      u.searchParams.set(k, String(v));\r\n    }\r\n  }\r\n  return u.toString();\r\n}\r\n\r\nasync function forward(method: 'GET' | 'POST', url: string, body?: any) {\r\n  if (!GAS_BASE) {\r\n    return NextResponse.json({ ok: false, error: 'Missing NEXT_PUBLIC_GAS_BASE' }, { status: 500 });\r\n  }\r\n\r\n  const ac = new AbortController();\r\n  const t = setTimeout(() => ac.abort(), TIMEOUT_MS);\r\n\r\n  try {\r\n    const headers: Record<string, string> = { 'Content-Type': 'application/json' };\r\n\r\n    // If GAS_TOKEN is set, ensure GAS gets it the way your script expects:\r\n    //  - For GET: as ?token=...\r\n    //  - For POST: inside JSON body as { token: \"...\" }\r\n    const gasUrl = new URL(url);\r\n    if (GAS_TOKEN && !gasUrl.searchParams.get('token')) {\r\n      gasUrl.searchParams.set('token', GAS_TOKEN);\r\n    }\r\n\r\n    const postBody =\r\n      method === 'POST'\r\n        ? JSON.stringify({\r\n            ...(body ?? {}),\r\n            ...(GAS_TOKEN ? { token: GAS_TOKEN } : {}),\r\n          })\r\n        : undefined;\r\n\r\n    const res = await fetch(gasUrl.toString(), {\r\n      method,\r\n      headers,\r\n      body: postBody,\r\n      signal: ac.signal,\r\n      cache: 'no-store',\r\n      next: { revalidate: 0 },\r\n    });\r\n\r\n    const ct = res.headers.get('content-type') || '';\r\n    if (!ct.includes('application/json')) {\r\n      const text = await res.text();\r\n      return NextResponse.json({ ok: false, error: 'Non-JSON from GAS', body: text }, { status: 502 });\r\n    }\r\n\r\n    const json = await res.json();\r\n    return NextResponse.json(json, { status: res.status });\r\n  } catch (err: any) {\r\n    const msg = err?.name === 'AbortError' ? 'Timeout contacting GAS' : (err?.message || 'Fetch error');\r\n    return NextResponse.json({ ok: false, error: msg }, { status: 504 });\r\n  } finally {\r\n    clearTimeout(t);\r\n  }\r\n}\r\n\r\nexport async function GET(req: NextRequest) {\r\n  const urlObj = new URL(req.url);\r\n  const action = urlObj.searchParams.get('action') || urlObj.searchParams.get('endpoint') || '';\r\n  const tag = urlObj.searchParams.get('tag') || '';\r\n  const q = urlObj.searchParams.get('q') || '';\r\n\r\n  const url = withQuery(GAS_BASE, {\r\n    action: action || (q ? 'search' : tag ? 'get' : 'ping'),\r\n    tag: tag || undefined,\r\n    q: q || undefined,\r\n    // token appended in forward()\r\n  });\r\n\r\n  return forward('GET', url);\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  const body = await req.json().catch(() => ({}));\r\n  const action =\r\n    body?.action ||\r\n    body?.endpoint ||\r\n    (body?.job ? 'save' : body?.tag && body?.reason ? 'log-call' : body?.tag ? 'progress' : 'ping');\r\n\r\n  const url = withQuery(GAS_BASE, { action /* token appended in forward() */ });\r\n  return forward('POST', url, body);\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/search/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { searchJobs } from '@/lib/api';\r\n\r\ntype Row = {\r\n  row?: number;\r\n  tag: string;\r\n  customer?: string; // sometimes \"Customer Name\"\r\n  name?: string;     // sometimes \"Customer\"\r\n  phone?: string;\r\n  status?: string;\r\n  dropoff?: string;\r\n  url?: string;      // optional deep-link from backend\r\n};\r\n\r\nexport default function SearchPage() {\r\n  const [q, setQ] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState<string>('');\r\n  const [rows, setRows] = useState<Row[]>([]);\r\n\r\n  // keep it simple: require 2+ chars before searching\r\n  const debouncedQ = useMemo(() => q.trim(), [q]);\r\n\r\n  useEffect(() => {\r\n    const t = setTimeout(async () => {\r\n      setErr('');\r\n      if (debouncedQ.length < 2) {\r\n        setRows([]);\r\n        return;\r\n      }\r\n      try {\r\n        setLoading(true);\r\n        // explicit object call matches our helper -> /api/gas/search\r\n        const res = await searchJobs({ q: debouncedQ, limit: 50, offset: 0 });\r\n        if (!res?.ok) {\r\n          setErr(res?.error || 'Search failed');\r\n          setRows([]);\r\n        } else {\r\n          setRows((res.rows || []) as Row[]);\r\n        }\r\n      } catch (e: any) {\r\n        setErr(e?.message || 'Search failed');\r\n        setRows([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }, 250);\r\n    return () => clearTimeout(t);\r\n  }, [debouncedQ]);\r\n\r\n  return (\r\n    <div className=\"wrap\">\r\n      <h2>Search</h2>\r\n\r\n      <div className=\"bar\">\r\n        <input\r\n          value={q}\r\n          onChange={(e) => setQ(e.target.value)}\r\n          placeholder=\"Search by tag, name, or phone…\"\r\n          aria-label=\"Search\"\r\n        />\r\n        <div className=\"hint\">Type at least 2 characters</div>\r\n      </div>\r\n\r\n      {err && <div className=\"err\">{err}</div>}\r\n      {loading && <div className=\"muted\">Searching…</div>}\r\n      {!loading && !err && debouncedQ && rows.length === 0 && (\r\n        <div className=\"muted\">No matches.</div>\r\n      )}\r\n\r\n      {rows.length > 0 && (\r\n        <table className=\"tbl\">\r\n          <thead>\r\n            <tr>\r\n              <th>Tag</th>\r\n              <th>Customer</th>\r\n              <th>Phone</th>\r\n              <th>Status</th>\r\n              <th>Drop-off</th>\r\n              <th>Open</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((r, i) => {\r\n              const tag = r.tag;\r\n              const customer = r.customer || r.name || '—';\r\n              // open the butcher-friendly intake by default\r\n              const href = `/intake?tag=${encodeURIComponent(r.tag)}`;\r\n              return (\r\n                <tr key={`${tag}-${r.row ?? i}`}>\r\n                  <td>{tag}</td>\r\n                  <td>{customer}</td>\r\n                  <td>{r.phone || ''}</td>\r\n                  <td>{r.status || ''}</td>\r\n                  <td>{r.dropoff || ''}</td>\r\n                  <td><Link href={href}>Open</Link></td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      <style jsx>{`\r\n        .wrap { max-width: 900px; margin: 16px auto; padding: 12px; font-family: Arial, sans-serif; }\r\n        h2 { margin: 0 0 8px; }\r\n        .bar { display: grid; grid-template-columns: 1fr auto; gap: 8px; align-items: end; margin-bottom: 10px; }\r\n        input { width: 100%; padding: 8px 10px; border: 1px solid #d8e3f5; border-radius: 8px; }\r\n        .hint { font-size: 12px; color: #6b7280; }\r\n        .muted { color: #6b7280; font-size: 14px; margin-top: 8px; }\r\n        .err { color: #b91c1c; margin-top: 8px; }\r\n        .tbl { width: 100%; border-collapse: collapse; margin-top: 12px; }\r\n        th, td { border: 1px solid #e5e7eb; padding: 6px 8px; text-align: left; vertical-align: middle; }\r\n        thead th { background: #f3f4f6; }\r\n        tbody tr:hover { background: #fafafa; }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;;;;;;AAiBe,SAAS;IACtB,MAAM,CAAC,GAAG,KAAK,GAAG,IAAA,iNAAQ,EAAC;IAC3B,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,iNAAQ,EAAS;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAQ,EAAE;IAE1C,oDAAoD;IACpD,MAAM,aAAa,IAAA,gNAAO,EAAC,IAAM,EAAE,IAAI,IAAI;QAAC;KAAE;IAE9C,IAAA,kNAAS,EAAC;QACR,MAAM,IAAI,WAAW;YACnB,OAAO;YACP,IAAI,WAAW,MAAM,GAAG,GAAG;gBACzB,QAAQ,EAAE;gBACV;YACF;YACA,IAAI;gBACF,WAAW;gBACX,6DAA6D;gBAC7D,MAAM,MAAM,MAAM,IAAA,wHAAU,EAAC;oBAAE,GAAG;oBAAY,OAAO;oBAAI,QAAQ;gBAAE;gBACnE,IAAI,CAAC,KAAK,IAAI;oBACZ,OAAO,KAAK,SAAS;oBACrB,QAAQ,EAAE;gBACZ,OAAO;oBACL,QAAS,IAAI,IAAI,IAAI,EAAE;gBACzB;YACF,EAAE,OAAO,GAAQ;gBACf,OAAO,GAAG,WAAW;gBACrB,QAAQ,EAAE;YACZ,SAAU;gBACR,WAAW;YACb;QACF,GAAG;QACH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;KAAW;IAEf,qBACE,8OAAC;kDAAc;;0BACb,8OAAC;;0BAAG;;;;;;0BAEJ,8OAAC;0DAAc;;kCACb,8OAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,KAAK,EAAE,MAAM,CAAC,KAAK;wBACpC,aAAY;wBACZ,cAAW;;;;;;;kCAEb,8OAAC;kEAAc;kCAAO;;;;;;;;;;;;YAGvB,qBAAO,8OAAC;0DAAc;0BAAO;;;;;;YAC7B,yBAAW,8OAAC;0DAAc;0BAAQ;;;;;;YAClC,CAAC,WAAW,CAAC,OAAO,cAAc,KAAK,MAAM,KAAK,mBACjD,8OAAC;0DAAc;0BAAQ;;;;;;YAGxB,KAAK,MAAM,GAAG,mBACb,8OAAC;0DAAgB;;kCACf,8OAAC;;kCACC,cAAA,8OAAC;;;8CACC,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;8CACJ,8OAAC;;8CAAG;;;;;;;;;;;;;;;;;kCAGR,8OAAC;;kCACE,KAAK,GAAG,CAAC,CAAC,GAAG;4BACZ,MAAM,MAAM,EAAE,GAAG;4BACjB,MAAM,WAAW,EAAE,QAAQ,IAAI,EAAE,IAAI,IAAI;4BACzC,8CAA8C;4BAC9C,MAAM,OAAO,CAAC,YAAY,EAAE,mBAAmB,EAAE,GAAG,GAAG;4BACvD,qBACE,8OAAC;;;kDACC,8OAAC;;kDAAI;;;;;;kDACL,8OAAC;;kDAAI;;;;;;kDACL,8OAAC;;kDAAI,EAAE,KAAK,IAAI;;;;;;kDAChB,8OAAC;;kDAAI,EAAE,MAAM,IAAI;;;;;;kDACjB,8OAAC;;kDAAI,EAAE,OAAO,IAAI;;;;;;kDAClB,8OAAC;;kDAAG,cAAA,8OAAC,uKAAI;4CAAC,MAAM;sDAAM;;;;;;;;;;;;+BANf,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,GAAG;;;;;wBASnC;;;;;;;;;;;;;;;;;;;;;;AAoBZ","debugId":null}}]
}