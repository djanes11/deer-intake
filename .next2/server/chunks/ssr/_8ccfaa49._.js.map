{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/lib/useScanner.ts"],"sourcesContent":["'use client';\r\nimport { useEffect, useRef } from 'react';\r\n\r\n/**\r\n * useScanner - captures fast keyboard-wedge barcode scans that end with Enter.\r\n * Resets buffer if typing is slow (i.e., a human).\r\n */\r\nexport function useScanner(onScan: (code: string) => void, opts?: { resetMs?: number }) {\r\n  const buf = useRef('');\r\n  const t = useRef<ReturnType<typeof setTimeout> | null>(null);\r\n  const resetMs = opts?.resetMs ?? 150;\r\n\r\n  useEffect(() => {\r\n    const onKey = (e: KeyboardEvent) => {\r\n      if (e.key === 'Enter') {\r\n        const code = buf.current.trim();\r\n        buf.current = '';\r\n        if (code) onScan(code);\r\n        return;\r\n      }\r\n      if (e.key.length === 1) {\r\n        buf.current += e.key;\r\n        if (t.current) clearTimeout(t.current);\r\n        t.current = setTimeout(() => (buf.current = ''), resetMs);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => window.removeEventListener('keydown', onKey);\r\n  }, [onScan, resetMs]);\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;AAOO,SAAS,WAAW,MAA8B,EAAE,IAA2B;IACpF,MAAM,MAAM,IAAA,+MAAM,EAAC;IACnB,MAAM,IAAI,IAAA,+MAAM,EAAuC;IACvD,MAAM,UAAU,MAAM,WAAW;IAEjC,IAAA,kNAAS,EAAC;QACR,MAAM,QAAQ,CAAC;YACb,IAAI,EAAE,GAAG,KAAK,SAAS;gBACrB,MAAM,OAAO,IAAI,OAAO,CAAC,IAAI;gBAC7B,IAAI,OAAO,GAAG;gBACd,IAAI,MAAM,OAAO;gBACjB;YACF;YACA,IAAI,EAAE,GAAG,CAAC,MAAM,KAAK,GAAG;gBACtB,IAAI,OAAO,IAAI,EAAE,GAAG;gBACpB,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO;gBACrC,EAAE,OAAO,GAAG,WAAW,IAAO,IAAI,OAAO,GAAG,IAAK;YACnD;QACF;QACA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;IACrD,GAAG;QAAC;QAAQ;KAAQ;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/lib/api.ts"],"sourcesContent":["// lib/api.ts — hardened against AbortError + clearer errors\r\n\r\nexport type Job = {\r\n  tag?: string;\r\n  customer?: string;\r\n  phone?: string;\r\n  dropoff?: string;\r\n\r\n  status?: string;\r\n  capingStatus?: string;\r\n  webbsStatus?: string;\r\n\r\n  callAttempts?: number;\r\n  lastCallAt?: string;\r\n  lastCalledBy?: string;\r\n  callNotes?: string;\r\n\r\n  confirmation?: string;\r\n  email?: string;\r\n  address?: string; city?: string; state?: string; zip?: string;\r\n  county?: string; sex?: string; processType?: string;\r\n  steak?: string; steakOther?: string; burgerSize?: string; steaksPerPackage?: string; beefFat?: boolean;\r\n  hindRoastCount?: string; frontRoastCount?: string;\r\n  backstrapPrep?: string; backstrapThickness?: string; backstrapThicknessOther?: string;\r\n  specialtyProducts?: boolean; summerSausageLbs?: string | number; summerSausageCheeseLbs?: string | number; slicedJerkyLbs?: string | number; specialtyPounds?: string;\r\n  notes?: string;\r\n  webbsOrder?: boolean; webbsFormNumber?: string; webbsPounds?: string;\r\n  price?: number | string; priceProcessing?: number | string; priceSpecialty?: number | string;\r\n  Paid?: boolean; paid?: boolean; paidProcessing?: boolean; paidSpecialty?: boolean;\r\n};\r\n\r\nconst PROXY = '/api/gas2';\r\n\r\nfunction urlForGet(params: Record<string, string>) {\r\n  const q = new URLSearchParams(params).toString();\r\n  return `${PROXY}?${q}`;\r\n}\r\n\r\nfunction withTimeout(ms: number): { signal: AbortSignal; cancel: () => void } {\r\n  const ctrl = new AbortController();\r\n  const id = setTimeout(() => ctrl.abort(), ms);\r\n  return { signal: ctrl.signal, cancel: () => clearTimeout(id) };\r\n}\r\n\r\nasync function fetchJSON<T>(input: string, init?: RequestInit): Promise<T> {\r\n  const { signal, cancel } = withTimeout(20000); // 20s\r\n  try {\r\n    const res = await fetch(input, {\r\n      ...init,\r\n      signal,\r\n      headers: { 'Content-Type': 'application/json', ...(init?.headers || {}) },\r\n      cache: 'no-store',\r\n      keepalive: false,\r\n    });\r\n\r\n    // Read raw text first so we can show upstream HTML or text errors\r\n    const text = await res.text().catch(() => '');\r\n    let data: any = null;\r\n    try { data = text ? JSON.parse(text) : null; } catch { /* non-JSON */ }\r\n\r\n    if (!res.ok) {\r\n      const msg = (data && data.error) ? data.error : (text || `HTTP ${res.status}`);\r\n      throw new Error(msg);\r\n    }\r\n    return (data ?? {}) as T;\r\n  } catch (err: any) {\r\n    // Map aborted requests to a clear message\r\n    if (err?.name === 'AbortError') {\r\n      throw new Error('Request timed out');\r\n    }\r\n    throw new Error(err?.message || 'Network error');\r\n  } finally {\r\n    cancel();\r\n  }\r\n}\r\n\r\n/* ---------- API wrappers ---------- */\r\n\r\nexport async function searchJobs(q: string) {\r\n  const path = urlForGet({ action: 'search', q });\r\n  const j = await fetchJSON<{ ok: boolean; rows?: Job[]; jobs?: Job[]; results?: Job[]; total?: number }>(path);\r\n  return { ...j, rows: j.rows || j.results || j.jobs || [] };\r\n}\r\n\r\nexport async function getJob(tag: string) {\r\n  const path = urlForGet({ action: 'get', tag });\r\n  return fetchJSON<{ ok: boolean; exists?: boolean; job?: Job }>(path);\r\n}\r\n\r\nexport async function saveJob(job: Job) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'save', job }),\r\n  });\r\n}\r\n\r\nexport async function progress(payload: { tag: string }) {\r\n  return fetchJSON<{ ok: boolean; nextStatus?: string }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'progress', tag: payload.tag }),\r\n  });\r\n}\r\n\r\n// NO STATUS FLIP — just increments attempts and appends notes\r\nexport async function logCallSimple(payload: { tag: string; reason?: string; notes?: string }) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'log-call', ...payload }),\r\n  });\r\n}\r\n\r\n// STATUS FLIP to \"Called\" in the appropriate column (meat/cape/webbs)\r\nexport async function markCalled(payload: { tag: string; scope?: 'auto' | 'meat' | 'cape' | 'webbs'; notes?: string }) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'markCalled', tag: payload.tag, scope: payload.scope || 'auto', notes: payload.notes || '' }),\r\n  });\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,4DAA4D;;;;;;;;;;;;;;;AA+B5D,MAAM,QAAQ;AAEd,SAAS,UAAU,MAA8B;IAC/C,MAAM,IAAI,IAAI,gBAAgB,QAAQ,QAAQ;IAC9C,OAAO,GAAG,MAAM,CAAC,EAAE,GAAG;AACxB;AAEA,SAAS,YAAY,EAAU;IAC7B,MAAM,OAAO,IAAI;IACjB,MAAM,KAAK,WAAW,IAAM,KAAK,KAAK,IAAI;IAC1C,OAAO;QAAE,QAAQ,KAAK,MAAM;QAAE,QAAQ,IAAM,aAAa;IAAI;AAC/D;AAEA,eAAe,UAAa,KAAa,EAAE,IAAkB;IAC3D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,YAAY,QAAQ,MAAM;IACrD,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,OAAO;YAC7B,GAAG,IAAI;YACP;YACA,SAAS;gBAAE,gBAAgB;gBAAoB,GAAI,MAAM,WAAW,CAAC,CAAC;YAAE;YACxE,OAAO;YACP,WAAW;QACb;QAEA,kEAAkE;QAClE,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAC1C,IAAI,OAAY;QAChB,IAAI;YAAE,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ;QAAM,EAAE,OAAM,CAAiB;QAEtE,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,MAAM,AAAC,QAAQ,KAAK,KAAK,GAAI,KAAK,KAAK,GAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,MAAM,EAAE;YAC7E,MAAM,IAAI,MAAM;QAClB;QACA,OAAQ,QAAQ,CAAC;IACnB,EAAE,OAAO,KAAU;QACjB,0CAA0C;QAC1C,IAAI,KAAK,SAAS,cAAc;YAC9B,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,IAAI,MAAM,KAAK,WAAW;IAClC,SAAU;QACR;IACF;AACF;AAIO,eAAe,WAAW,CAAS;IACxC,MAAM,OAAO,UAAU;QAAE,QAAQ;QAAU;IAAE;IAC7C,MAAM,IAAI,MAAM,UAAwF;IACxG,OAAO;QAAE,GAAG,CAAC;QAAE,MAAM,EAAE,IAAI,IAAI,EAAE,OAAO,IAAI,EAAE,IAAI,IAAI,EAAE;IAAC;AAC3D;AAEO,eAAe,OAAO,GAAW;IACtC,MAAM,OAAO,UAAU;QAAE,QAAQ;QAAO;IAAI;IAC5C,OAAO,UAAwD;AACjE;AAEO,eAAe,QAAQ,GAAQ;IACpC,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAQ;QAAI;IAC7C;AACF;AAEO,eAAe,SAAS,OAAwB;IACrD,OAAO,UAAgD,OAAO;QAC5D,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAY,KAAK,QAAQ,GAAG;QAAC;IAC9D;AACF;AAGO,eAAe,cAAc,OAAyD;IAC3F,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAY,GAAG,OAAO;QAAC;IACxD;AACF;AAGO,eAAe,WAAW,OAAoF;IACnH,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAc,KAAK,QAAQ,GAAG;YAAE,OAAO,QAAQ,KAAK,IAAI;YAAQ,OAAO,QAAQ,KAAK,IAAI;QAAG;IAC5H;AACF","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/scan/page.tsx"],"sourcesContent":["'use client';\r\nimport { useRef, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useScanner } from '@/lib/useScanner';\r\nimport { progress } from '@/lib/api';\r\n\r\nfunction useBeep() {\r\n  // Tiny WebAudio beeps: success & error\r\n  const ctxRef = useRef<AudioContext | null>(null);\r\n  const getCtx = () => (ctxRef.current ??= new (window.AudioContext || (window as any).webkitAudioContext)());\r\n  const play = (freq = 880, durMs = 120, type: OscillatorType = 'sine', gain = 0.04) => {\r\n    const ctx = getCtx();\r\n    const osc = ctx.createOscillator();\r\n    const g = ctx.createGain();\r\n    osc.type = type;\r\n    osc.frequency.value = freq;\r\n    g.gain.value = gain;\r\n    osc.connect(g); g.connect(ctx.destination);\r\n    const t = ctx.currentTime;\r\n    osc.start(t);\r\n    osc.stop(t + durMs / 1000);\r\n  };\r\n  return {\r\n    ok: () => { play(1046, 90, 'triangle', 0.05); setTimeout(()=>play(1318, 110, 'triangle', 0.05), 60); },\r\n    err: () => { play(220, 140, 'sawtooth', 0.06); setTimeout(()=>play(196, 160, 'sawtooth', 0.06), 70); }\r\n  };\r\n}\r\n\r\nexport default function ScanKiosk() {\r\n  const router = useRouter();\r\n  const [last, setLast] = useState<string>('');\r\n  const [status, setStatus] = useState<{ kind:'idle'|'ok'|'err'; text:string }>({ kind:'idle', text:'' });\r\n\r\n  const guardRef = useRef({ lastAt: 0, lastTag: '' });\r\n  const beeps = useBeep();\r\n\r\n  useScanner(async (rawTag) => {\r\n    const tag = String(rawTag || '').trim();\r\n    const now = Date.now();\r\n    // Debounce: ignore events within 250ms; also ignore immediate duplicate within 1000ms\r\n    if (now - guardRef.current.lastAt < 250) return;\r\n    if (tag === guardRef.current.lastTag && now - guardRef.current.lastAt < 1000) return;\r\n    guardRef.current = { lastAt: now, lastTag: tag };\r\n\r\n    setLast(tag);\r\n    setStatus({ kind:'idle', text:'' });\r\n\r\n    try {\r\n      const res = await progress(tag);\r\n      if (!res?.ok) throw new Error(res?.error || 'Could not progress');\r\n\r\n      if (res.nextStatus === 'Processing') {\r\n        setStatus({ kind:'ok', text:'Processing — opening butcher view…' });\r\n        beeps.ok();\r\n        router.push(`/butcher/intake?tag=${encodeURIComponent(tag)}`);\r\n      } else if (res.nextStatus === 'Finished') {\r\n        setStatus({ kind:'ok', text:'Marked Finished ✓' });\r\n        beeps.ok();\r\n        // Keep kiosk ready for the next scan\r\n        setTimeout(() => setStatus({ kind:'idle', text:'' }), 1000);\r\n      } else {\r\n        setStatus({ kind:'err', text:'No status change' });\r\n        beeps.err();\r\n        setTimeout(() => setStatus({ kind:'idle', text:'' }), 1000);\r\n      }\r\n    } catch (e: any) {\r\n      setStatus({ kind:'err', text: e?.message || 'Scan failed' });\r\n      beeps.err();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <main className=\"scan-page\" style={{ textAlign:'center' }}>\r\n      <h1 style={{ margin:'4px 0 8px' }}>Scan a Tag</h1>\r\n      <p style={{ color:'var(--muted)', margin:'0 0 16px' }}>\r\n        Scan once to start Processing; scan again to mark Finished.\r\n      </p>\r\n\r\n      <div style={{ fontSize:56, fontWeight:900, letterSpacing:1, margin:'14px 0' }}>{last || '—'}</div>\r\n\r\n      {/* Big, color banner */}\r\n      <div\r\n        aria-live=\"polite\"\r\n        style={{\r\n          minHeight: 52,\r\n          display:'grid',\r\n          placeItems:'center',\r\n          fontWeight:800,\r\n          border:'1px solid var(--border)',\r\n          borderRadius:12,\r\n          margin:'10px auto 0',\r\n          maxWidth: 680,\r\n          padding:'10px 12px',\r\n          background:\r\n            status.kind === 'ok' ? '#ecfdf5' :\r\n            status.kind === 'err' ? '#fef2f2' : 'rgba(255,255,255,0.9)',\r\n          color:\r\n            status.kind === 'ok' ? '#065f46' :\r\n            status.kind === 'err' ? '#991b1b' : 'var(--muted)'\r\n        }}\r\n      >\r\n        {status.text || 'Ready for next scan'}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}