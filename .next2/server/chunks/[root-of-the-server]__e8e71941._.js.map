{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/api/gas2/route.ts"],"sourcesContent":["// app/api/gas2/route.ts\r\n// Simple pass-through proxy to your Apps Script Web App.\r\n// - Supports GET/POST\r\n// - Adds optional API token automatically\r\n// - 60s upstream timeout with good error messages\r\n\r\nexport const runtime = 'nodejs'; // ensure Node runtime (not edge)\r\nexport const dynamic = 'force-dynamic';\r\n\r\nconst GAS_BASE =\r\n  process.env.NEXT_PUBLIC_GAS_BASE?.trim() ||\r\n  process.env.GAS_BASE?.trim();\r\n\r\nconst GAS_TOKEN =\r\n  process.env.NEXT_PUBLIC_GAS_TOKEN?.trim() ||\r\n  process.env.GAS_TOKEN?.trim() ||\r\n  ''; // leave blank if not using tokens\r\n\r\nfunction buildUpstreamURL(req: Request, extraQS: Record<string, string> = {}) {\r\n  if (!GAS_BASE) throw new Error('Missing GAS_BASE/NEXT_PUBLIC_GAS_BASE');\r\n  const url = new URL(GAS_BASE);\r\n  // pass existing query\r\n  const inQ = new URL(req.url).searchParams;\r\n  inQ.forEach((v, k) => url.searchParams.set(k, v));\r\n  // apply extra params\r\n  Object.entries(extraQS).forEach(([k, v]) => url.searchParams.set(k, v));\r\n  if (GAS_TOKEN) url.searchParams.set('token', GAS_TOKEN);\r\n  return url.toString();\r\n}\r\n\r\nfunction withTimeout(ms: number) {\r\n  const ctrl = new AbortController();\r\n  const id = setTimeout(() => ctrl.abort(), ms);\r\n  return { signal: ctrl.signal, cancel: () => clearTimeout(id) };\r\n}\r\n\r\nasync function passthrough(req: Request, init?: RequestInit) {\r\n  const { signal, cancel } = withTimeout(60000); // 60s\r\n  try {\r\n    const upstreamURL = buildUpstreamURL(req);\r\n    const res = await fetch(upstreamURL, {\r\n      ...init,\r\n      signal,\r\n      // never send browser cookies upstream; Apps Script doesn’t need them\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      cache: 'no-store',\r\n      redirect: 'follow',\r\n    });\r\n\r\n    const text = await res.text().catch(() => '');\r\n    // Try JSON first; if not JSON, pass back text\r\n    try {\r\n      const json = text ? JSON.parse(text) : {};\r\n      return new Response(JSON.stringify(json), {\r\n        status: res.status,\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n    } catch {\r\n      // Not JSON from Apps Script — return as text for visibility\r\n      return new Response(text || `Upstream HTTP ${res.status}`, {\r\n        status: res.status,\r\n        headers: { 'Content-Type': 'text/plain' },\r\n      });\r\n    }\r\n  } catch (err: any) {\r\n    if (err?.name === 'AbortError') {\r\n      return new Response('Upstream timeout', { status: 504 });\r\n    }\r\n    return new Response(err?.message || 'Proxy error', { status: 502 });\r\n  } finally {\r\n    cancel();\r\n  }\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  return passthrough(req);\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  // We POST to GAS with JSON body and the same query string.\r\n  // GAS Web App prefers action in body, which your frontend already sends.\r\n  const body = await req.text().catch(() => '');\r\n  const { signal, cancel } = withTimeout(60000);\r\n  try {\r\n    const upstreamURL = buildUpstreamURL(req);\r\n    const res = await fetch(upstreamURL, {\r\n      method: 'POST',\r\n      body,\r\n      signal,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      cache: 'no-store',\r\n    });\r\n\r\n    const text = await res.text().catch(() => '');\r\n    try {\r\n      const json = text ? JSON.parse(text) : {};\r\n      return new Response(JSON.stringify(json), {\r\n        status: res.status,\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n    } catch {\r\n      return new Response(text || `Upstream HTTP ${res.status}`, {\r\n        status: res.status,\r\n        headers: { 'Content-Type': 'text/plain' },\r\n      });\r\n    }\r\n  } catch (err: any) {\r\n    if (err?.name === 'AbortError') {\r\n      return new Response('Upstream timeout', { status: 504 });\r\n    }\r\n    return new Response(err?.message || 'Proxy error', { status: 502 });\r\n  } finally {\r\n    cancel();\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}