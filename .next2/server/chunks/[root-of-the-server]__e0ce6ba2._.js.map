{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/api/gas2/route.ts"],"sourcesContent":["// app/api/gas2/route.ts\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nconst GAS_BASE =\r\n  process.env.NEXT_PUBLIC_GAS_BASE ||\r\n  process.env.GAS_BASE ||\r\n  '';\r\n\r\nfunction bad(msg: string, status = 400) {\r\n  return NextResponse.json({ ok: false, error: msg }, { status });\r\n}\r\nfunction ok(data: any, status = 200) {\r\n  return NextResponse.json(data, { status });\r\n}\r\nfunction toURL(base: string, params: Record<string, string | undefined>) {\r\n  const u = new URL(base);\r\n  for (const [k, v] of Object.entries(params)) {\r\n    if (v != null && v !== '') u.searchParams.set(k, String(v));\r\n  }\r\n  return u.toString();\r\n}\r\n\r\n// ---------- GET /api/gas2?action=ping|get|search ----------\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    if (!GAS_BASE) return bad('Missing NEXT_PUBLIC_GAS_BASE (or GAS_BASE) env.', 500);\r\n\r\n    const { searchParams } = new URL(req.url);\r\n    const action = (searchParams.get('action') || '').trim().toLowerCase();\r\n    if (!['ping', 'get', 'search'].includes(action)) {\r\n      return bad('Unsupported GET action. Use action=ping|get|search.');\r\n    }\r\n\r\n    const tag = searchParams.get('tag') || '';\r\n    const q = searchParams.get('q') || '';\r\n    const token = searchParams.get('token') || process.env.NEXT_PUBLIC_GAS_TOKEN || process.env.GAS_TOKEN || '';\r\n\r\n    const gasUrl = toURL(GAS_BASE, { action, tag, q, token });\r\n\r\n    const res = await fetch(gasUrl, { method: 'GET', cache: 'no-store' });\r\n    let data: any = null; try { data = await res.json(); } catch {}\r\n    if (!res.ok) return bad(data?.error || `GAS HTTP ${res.status}`, res.status);\r\n    return ok(data, 200);\r\n  } catch (e: any) {\r\n    return bad(e?.message || 'Proxy GET failed', 500);\r\n  }\r\n}\r\n\r\n// ---------- POST /api/gas2 with { action: ... } ----------\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    if (!GAS_BASE) return bad('Missing NEXT_PUBLIC_GAS_BASE (or GAS_BASE) env.', 500);\r\n\r\n    let body: any = {};\r\n    try { body = await req.json(); } catch { return bad('Invalid JSON body', 400); }\r\n\r\n    const action = String(body?.action || '').toLowerCase();\r\n    const allowed = new Set(['save', 'progress', 'log-call', 'markcalled', 'get', 'search']);\r\n    if (!allowed.has(action)) return bad(`Unsupported POST action \"${action}\".`, 400);\r\n\r\n    const token = body?.token || process.env.NEXT_PUBLIC_GAS_TOKEN || process.env.GAS_TOKEN || '';\r\n    const forwardBody = token ? { ...body, token } : body;\r\n\r\n    const gasRes = await fetch(GAS_BASE, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(forwardBody),\r\n      cache: 'no-store',\r\n    });\r\n\r\n    let data: any = null; try { data = await gasRes.json(); } catch {}\r\n    if (!gasRes.ok) return bad(data?.error || `GAS HTTP ${gasRes.status}`, gasRes.status);\r\n    return ok(data, 200);\r\n  } catch (e: any) {\r\n    return bad(e?.message || 'Proxy POST failed', 500);\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}