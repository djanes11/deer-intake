{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/lib/api.ts"],"sourcesContent":["// lib/api.ts — hardened against AbortError + clearer errors\r\n\r\nexport type Job = {\r\n  tag?: string;\r\n  customer?: string;\r\n  phone?: string;\r\n  dropoff?: string;\r\n\r\n  status?: string;\r\n  capingStatus?: string;\r\n  webbsStatus?: string;\r\n\r\n  callAttempts?: number;\r\n  lastCallAt?: string;\r\n  lastCalledBy?: string;\r\n  callNotes?: string;\r\n\r\n  confirmation?: string;\r\n  email?: string;\r\n  address?: string; city?: string; state?: string; zip?: string;\r\n  county?: string; sex?: string; processType?: string;\r\n  steak?: string; steakOther?: string; burgerSize?: string; steaksPerPackage?: string; beefFat?: boolean;\r\n  hindRoastCount?: string; frontRoastCount?: string;\r\n  backstrapPrep?: string; backstrapThickness?: string; backstrapThicknessOther?: string;\r\n  specialtyProducts?: boolean; summerSausageLbs?: string | number; summerSausageCheeseLbs?: string | number; slicedJerkyLbs?: string | number; specialtyPounds?: string;\r\n  notes?: string;\r\n  webbsOrder?: boolean; webbsFormNumber?: string; webbsPounds?: string;\r\n  price?: number | string; priceProcessing?: number | string; priceSpecialty?: number | string;\r\n  Paid?: boolean; paid?: boolean; paidProcessing?: boolean; paidSpecialty?: boolean;\r\n};\r\n\r\nconst PROXY = '/api/gas2';\r\n\r\nfunction urlForGet(params: Record<string, string>) {\r\n  const q = new URLSearchParams(params).toString();\r\n  return `${PROXY}?${q}`;\r\n}\r\n\r\nfunction withTimeout(ms: number): { signal: AbortSignal; cancel: () => void } {\r\n  const ctrl = new AbortController();\r\n  const id = setTimeout(() => ctrl.abort(), ms);\r\n  return { signal: ctrl.signal, cancel: () => clearTimeout(id) };\r\n}\r\n\r\nasync function fetchJSON<T>(input: string, init?: RequestInit): Promise<T> {\r\n  const { signal, cancel } = withTimeout(20000); // 20s\r\n  try {\r\n    const res = await fetch(input, {\r\n      ...init,\r\n      signal,\r\n      headers: { 'Content-Type': 'application/json', ...(init?.headers || {}) },\r\n      cache: 'no-store',\r\n      keepalive: false,\r\n    });\r\n\r\n    // Read raw text first so we can show upstream HTML or text errors\r\n    const text = await res.text().catch(() => '');\r\n    let data: any = null;\r\n    try { data = text ? JSON.parse(text) : null; } catch { /* non-JSON */ }\r\n\r\n    if (!res.ok) {\r\n      const msg = (data && data.error) ? data.error : (text || `HTTP ${res.status}`);\r\n      throw new Error(msg);\r\n    }\r\n    return (data ?? {}) as T;\r\n  } catch (err: any) {\r\n    // Map aborted requests to a clear message\r\n    if (err?.name === 'AbortError') {\r\n      throw new Error('Request timed out');\r\n    }\r\n    throw new Error(err?.message || 'Network error');\r\n  } finally {\r\n    cancel();\r\n  }\r\n}\r\n\r\n/* ---------- API wrappers ---------- */\r\n\r\nexport async function searchJobs(q: string) {\r\n  const path = urlForGet({ action: 'search', q });\r\n  const j = await fetchJSON<{ ok: boolean; rows?: Job[]; jobs?: Job[]; results?: Job[]; total?: number }>(path);\r\n  return { ...j, rows: j.rows || j.results || j.jobs || [] };\r\n}\r\n\r\nexport async function getJob(tag: string) {\r\n  const path = urlForGet({ action: 'get', tag });\r\n  return fetchJSON<{ ok: boolean; exists?: boolean; job?: Job }>(path);\r\n}\r\n\r\nexport async function saveJob(job: Job) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'save', job }),\r\n  });\r\n}\r\n\r\nexport async function progress(payload: { tag: string }) {\r\n  return fetchJSON<{ ok: boolean; nextStatus?: string }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'progress', tag: payload.tag }),\r\n  });\r\n}\r\n\r\n// NO STATUS FLIP — just increments attempts and appends notes\r\nexport async function logCallSimple(payload: { tag: string; reason?: string; notes?: string }) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'log-call', ...payload }),\r\n  });\r\n}\r\n\r\n// STATUS FLIP to \"Called\" in the appropriate column (meat/cape/webbs)\r\nexport async function markCalled(payload: { tag: string; scope?: 'auto' | 'meat' | 'cape' | 'webbs'; notes?: string }) {\r\n  return fetchJSON<{ ok: boolean }>(PROXY, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ action: 'markCalled', tag: payload.tag, scope: payload.scope || 'auto', notes: payload.notes || '' }),\r\n  });\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,4DAA4D;;;;;;;;;;;;;;;AA+B5D,MAAM,QAAQ;AAEd,SAAS,UAAU,MAA8B;IAC/C,MAAM,IAAI,IAAI,gBAAgB,QAAQ,QAAQ;IAC9C,OAAO,AAAC,GAAW,OAAT,OAAM,KAAK,OAAF;AACrB;AAEA,SAAS,YAAY,EAAU;IAC7B,MAAM,OAAO,IAAI;IACjB,MAAM,KAAK,WAAW,IAAM,KAAK,KAAK,IAAI;IAC1C,OAAO;QAAE,QAAQ,KAAK,MAAM;QAAE,QAAQ,IAAM,aAAa;IAAI;AAC/D;AAEA,eAAe,UAAa,KAAa,EAAE,IAAkB;IAC3D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,YAAY,QAAQ,MAAM;IACrD,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,OAAO;YAC7B,GAAG,IAAI;YACP;YACA,SAAS;gBAAE,gBAAgB;gBAAoB,GAAI,CAAA,iBAAA,2BAAA,KAAM,OAAO,KAAI,CAAC,CAAC;YAAE;YACxE,OAAO;YACP,WAAW;QACb;QAEA,kEAAkE;QAClE,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAC1C,IAAI,OAAY;QAChB,IAAI;YAAE,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ;QAAM,EAAE,UAAM,CAAiB;QAEtE,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,MAAM,MAAM,AAAC,QAAQ,KAAK,KAAK,GAAI,KAAK,KAAK,GAAI,QAAQ,AAAC,QAAkB,OAAX,IAAI,MAAM;YAC3E,MAAM,IAAI,MAAM;QAClB;QACA,OAAQ,iBAAA,kBAAA,OAAQ,CAAC;IACnB,EAAE,OAAO,KAAU;QACjB,0CAA0C;QAC1C,IAAI,CAAA,gBAAA,0BAAA,IAAK,IAAI,MAAK,cAAc;YAC9B,MAAM,IAAI,MAAM;QAClB;QACA,MAAM,IAAI,MAAM,CAAA,gBAAA,0BAAA,IAAK,OAAO,KAAI;IAClC,SAAU;QACR;IACF;AACF;AAIO,eAAe,WAAW,CAAS;IACxC,MAAM,OAAO,UAAU;QAAE,QAAQ;QAAU;IAAE;IAC7C,MAAM,IAAI,MAAM,UAAwF;IACxG,OAAO;QAAE,GAAG,CAAC;QAAE,MAAM,EAAE,IAAI,IAAI,EAAE,OAAO,IAAI,EAAE,IAAI,IAAI,EAAE;IAAC;AAC3D;AAEO,eAAe,OAAO,GAAW;IACtC,MAAM,OAAO,UAAU;QAAE,QAAQ;QAAO;IAAI;IAC5C,OAAO,UAAwD;AACjE;AAEO,eAAe,QAAQ,GAAQ;IACpC,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAQ;QAAI;IAC7C;AACF;AAEO,eAAe,SAAS,OAAwB;IACrD,OAAO,UAAgD,OAAO;QAC5D,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAY,KAAK,QAAQ,GAAG;QAAC;IAC9D;AACF;AAGO,eAAe,cAAc,OAAyD;IAC3F,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAY,GAAG,OAAO;QAAC;IACxD;AACF;AAGO,eAAe,WAAW,OAAoF;IACnH,OAAO,UAA2B,OAAO;QACvC,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE,QAAQ;YAAc,KAAK,QAAQ,GAAG;YAAE,OAAO,QAAQ,KAAK,IAAI;YAAQ,OAAO,QAAQ,KAAK,IAAI;QAAG;IAC5H;AACF","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/components/PrintSheet.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useMemo } from \"react\";\r\n\r\ntype AnyRec = Record<string, any>;\r\n\r\nexport interface PrintSheetProps {\r\n  tag?: string;\r\n  job?: AnyRec | null;\r\n}\r\n\r\n/* ---------------- Helpers (pure) ---------------- */\r\nfunction jget(job: AnyRec | null | undefined, keys: string[]): string {\r\n  if (!job) return \"\";\r\n  for (const k of keys) {\r\n    const v = job[k];\r\n    if (v !== undefined && v !== null && v !== \"\") return String(v);\r\n  }\r\n  return \"\";\r\n}\r\n\r\nfunction asPounds(x: any): string {\r\n  const n = Number(x);\r\n  return Number.isFinite(n) && n > 0 ? String(n) : \"\";\r\n}\r\n\r\nfunction normProc(s: any): string {\r\n  s = String(s || \"\").toLowerCase();\r\n  if (s.includes(\"cape\") && !s.includes(\"skull\")) return \"Caped\";\r\n  if (s.includes(\"skull\")) return \"Skull-Cap\";\r\n  if (s.includes(\"euro\")) return \"European\";\r\n  if (s.includes(\"standard\")) return \"Standard Processing\";\r\n  return \"\";\r\n}\r\n\r\n// Processing price only (proc + beef fat + webbs fee)\r\nfunction suggestedProcessingPrice(proc: any, beef: boolean, webbs: boolean): number {\r\n  const p = normProc(proc);\r\n  let base =\r\n    p === \"Caped\" ? 150 :\r\n    ([\"Standard Processing\", \"Skull-Cap\", \"European\"].includes(p) ? 130 : 0);\r\n  if (!base) return 0;\r\n  return base + (beef ? 5 : 0) + (webbs ? 20 : 0);\r\n}\r\n\r\nfunction hasSpecialty(job: AnyRec | null | undefined): boolean {\r\n  const has = !!jget(job, [\"specialtyProducts\", \"Specialty Products\", \"Would like specialty products\"]);\r\n  const ss  = asPounds(jget(job, [\"summerSausageLbs\", \"Summer Sausage (lb)\", \"summer_sausage_lbs\"]));\r\n  const ssc = asPounds(jget(job, [\"summerSausageCheeseLbs\", \"Summer Sausage + Cheese (lb)\", \"summer_sausage_cheese_lbs\"]));\r\n  const jer = asPounds(jget(job, [\"slicedJerkyLbs\", \"Sliced Jerky (lb)\", \"sliced_jerky_lbs\"]));\r\n  return !!(has || ss || ssc || jer);\r\n}\r\n\r\nfunction money(n: number): string {\r\n  return \"$\" + (Number.isFinite(n) ? n.toFixed(2) : \"0.00\");\r\n}\r\n\r\n/* ---------------- Component ---------------- */\r\nexport default function PrintSheet({ tag, job }: PrintSheetProps) {\r\n  const pageCount = useMemo(() => (hasSpecialty(job) ? 2 : 1), [job]);\r\n  const pages = Array.from({ length: pageCount }, (_, i) => i);\r\n\r\n  // Barcode rendering\r\n  useEffect(() => {\r\n    const render = () => {\r\n      try {\r\n        const code = (job && (job as any).tag) ? (job as any).tag : (tag || \"\");\r\n        const wraps = document.querySelectorAll<HTMLElement>(\"#barcodeWrap\");\r\n        if (!code) {\r\n          wraps.forEach((w) => (w.style.display = \"none\"));\r\n          return;\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const JsBarcode: any = (window as any).JsBarcode;\r\n        if (!JsBarcode) return;\r\n        document.querySelectorAll<SVGSVGElement>(\"svg#tagBarcode\").forEach((svg) => {\r\n          // inside useEffect → render() → JsBarcode options\r\n          JsBarcode(svg, code, {\r\n            format: \"CODE128\",\r\n            lineColor: \"#111\",\r\n            width: 1.25,\r\n            height: 18,\r\n            displayValue: true,\r\n            font: \"monospace\",\r\n            fontSize: 10,\r\n            textMargin: 2,\r\n            margin: 0,\r\n          });\r\n        });\r\n      } catch (e) {\r\n        console.error(\"Barcode render error\", e);\r\n        document.querySelectorAll<HTMLElement>(\"#barcodeWrap\").forEach((w) => (w.style.display = \"none\"));\r\n      }\r\n    };\r\n    // load JsBarcode from CDN if needed\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if ((window as any).JsBarcode) render();\r\n    else {\r\n      const s = document.createElement(\"script\");\r\n      s.src = \"https://cdn.jsdelivr.net/npm/jsbarcode@3.11.6/dist/JsBarcode.all.min.js\";\r\n      s.onload = render;\r\n      s.onerror = () => {\r\n        console.error(\"Failed to load JsBarcode\");\r\n        document.querySelectorAll<HTMLElement>(\"#barcodeWrap\").forEach((w) => (w.style.display = \"none\"));\r\n      };\r\n      document.head.appendChild(s);\r\n    }\r\n  }, [job, tag]);\r\n\r\n  // ---- Derived fields ----\r\n  const addr2 = [job?.city, job?.state, job?.zip].filter(Boolean).join(\", \");\r\n  const steakOtherShown =\r\n    String(job?.steak || \"\").toLowerCase() === \"other\" &&\r\n    String(job?.steakOther || \"\").trim() !== \"\";\r\n  const specialtyShown = hasSpecialty(job);\r\n  const spec_ss  = asPounds(jget(job, [\"summerSausageLbs\",\"Summer Sausage (lb)\",\"summer_sausage_lbs\"]));\r\n  const spec_ssc = asPounds(jget(job, [\"summerSausageCheeseLbs\",\"Summer Sausage + Cheese (lb)\",\"summer_sausage_cheese_lbs\"]));\r\n  const spec_jer = asPounds(jget(job, [\"slicedJerkyLbs\",\"Sliced Jerky (lb)\",\"sliced_jerky_lbs\"]));\r\n\r\n  // Split prices (stay inside the same Price box)\r\n  const processingPrice = useMemo(() => {\r\n    return suggestedProcessingPrice(job?.processType, !!job?.beefFat, !!job?.webbsOrder);\r\n  }, [job?.processType, job?.beefFat, job?.webbsOrder]);\r\n\r\n  const specialtyPrice = useMemo(() => {\r\n    const ss  = Number(spec_ss)  || 0;\r\n    const ssc = Number(spec_ssc) || 0;\r\n    const jer = Number(spec_jer) || 0;\r\n    return ss * 4.25 + ssc * 4.60 + jer * 15.0;\r\n  }, [spec_ss, spec_ssc, spec_jer]);\r\n\r\n  const totalPrice = processingPrice + specialtyPrice;\r\n\r\n  return (\r\n    <div>\r\n      <style jsx global>{`\r\n        /* ===== Base (on-screen) ===== */\r\n        :root{\r\n          --fs-base:12px; --fs-h:16px; --fs-label:10px; --fs-badge:11px;\r\n          --pad-box:6px; --pad-val:3px 5px; --gap-row:4px; --gap-col:8px;\r\n          --radius:6px; --border:#cfd9ee; --val-border:#e5ecf8;\r\n        }\r\n        *{ box-sizing:border-box; }\r\n        body{ font-family:Arial, sans-serif; color:#111; margin:8px; font-size:var(--fs-base); line-height:1.25; }\r\n        .wrap{ max-width:800px; margin:0 auto; }\r\n        h2{ margin:0 0 6px; font-size:var(--fs-h); }\r\n        .grid{ display:grid; grid-template-columns:repeat(12,1fr); gap:var(--gap-row) var(--gap-col); }\r\n        .col-3{grid-column:span 3}.col-4{grid-column:span 4}.col-6{grid-column:span 6}.col-12{grid-column:1/-1}\r\n        .box{ border:1px solid var(--border); border-radius:var(--radius); padding:var(--pad-box); break-inside:avoid; page-break-inside:avoid; }\r\n        .row{ display:flex; gap:6px; }\r\n        .label{ font-size:var(--fs-label); color:#334155; font-weight:bold; margin-bottom:2px; }\r\n        .val{ padding:var(--pad-val); border:1px solid var(--val-border); border-radius:calc(var(--radius) - 1px); }\r\n        .check{ font-weight:bold; }\r\n        .hr{ border-top:1px dashed #ccd7ee; margin:6px 0; }\r\n        .money{ font-weight:800; }\r\n        .moneyTotal{ font-weight:900; }\r\n        .splitPriceRow{ display:flex; justify-content:space-between; gap:6px; }\r\n        .splitSep{ border-top:1px dashed #ccd7ee; margin:3px 0; }\r\n\r\n        #barcodeWrap { margin-top:4px; }\r\n        #tagBarcode  { width:100%; max-width:180px; height:auto; display:block; }\r\n\r\n        .noprint{ display:block; }\r\n        .page{ position:relative; margin:0 auto; }\r\n        .sheet{ margin:0; }\r\n\r\n        /* ===== Print ===== */\r\n        @media print{\r\n          @page { size: Letter; margin:6mm; }\r\n          .noprint{ display:none !important; }\r\n          body{ margin:0; }\r\n          .wrap{ margin:0; }\r\n\r\n          :root{\r\n            --fs-base:18px;\r\n            --fs-h:20px;\r\n            --fs-label:11.5px;\r\n            --pad-box:1px;\r\n            --pad-val:0 3px;\r\n            --gap-row:5px;\r\n            --gap-col:5px;\r\n          }\r\n\r\n          h2{ margin:0 0 4px !important; }\r\n          .row{ gap:4px !important; }\r\n          .hr{ margin:4px 0 !important; }\r\n          .val{ line-height:1.10 !important; }\r\n          #barcodeWrap { margin-top:2mm; }\r\n          #tagBarcode  { max-width:56mm; }\r\n          .page{ page-break-after: always; }\r\n          .page:last-of-type{ page-break-after: auto; }\r\n        }\r\n      `}</style>\r\n\r\n      <div id=\"pages\">\r\n        {pages.map((i) => (\r\n          <div className=\"page\" key={i}>\r\n            <div className=\"wrap sheet\">\r\n              <div className=\"row\" style={{ justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"6px\" }}>\r\n                <h2>Deer Intake</h2>\r\n                <div className=\"noprint\"><button onClick={() => window.print()}>Print</button></div>\r\n              </div>\r\n\r\n              <div className=\"grid\">\r\n                <div className=\"col-3 box\">\r\n                  <div className=\"label\">Tag #</div>\r\n                  <div className=\"val\" id=\"p_tag\">{job?.tag || tag || \"\"}</div>\r\n                  <div id=\"barcodeWrap\">\r\n                    <svg id=\"tagBarcode\" role=\"img\" aria-label=\"Tag barcode\"></svg>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-3 box\">\r\n                  <div className=\"label\">Confirmation #</div>\r\n                  <div className=\"val\" id=\"p_conf\">{job?.confirmation || \"\"}</div>\r\n                </div>\r\n\r\n                <div className=\"col-3 box\">\r\n                  <div className=\"label\">Drop-off Date</div>\r\n                  <div className=\"val\" id=\"p_drop\">{job?.dropoff || \"\"}</div>\r\n                </div>\r\n\r\n                {/* --- SAME container, but split prices inside --- */}\r\n                <div className=\"col-3 box\">\r\n                  <div className=\"label\">Price</div>\r\n                  <div className=\"val\" id=\"p_price_box\">\r\n                    <div className=\"splitPriceRow\">\r\n                      <span>Processing</span>\r\n                      <span className=\"money\" id=\"p_price_proc\">{money(processingPrice)}</span>\r\n                    </div>\r\n                    <div className=\"splitPriceRow\">\r\n                      <span>Specialty</span>\r\n                      <span className=\"money\" id=\"p_price_spec\">{money(specialtyPrice)}</span>\r\n                    </div>\r\n                    <div className=\"splitSep\" />\r\n                    <div className=\"splitPriceRow\">\r\n                      <span>Total</span>\r\n                      <span className=\"moneyTotal\" id=\"p_price_total\">{money(totalPrice)}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"hr\"></div>\r\n\r\n              <div className=\"grid\">\r\n                <div className=\"col-6 box\">\r\n                  <div className=\"label\">Customer</div>\r\n                  <div className=\"val\" id=\"p_name\">{job?.customer || \"\"}</div>\r\n                  <div className=\"val\" id=\"p_phone\">{job?.phone || \"\"}</div>\r\n                  <div className=\"val\" id=\"p_email\">{job?.email || \"\"}</div>\r\n                </div>\r\n                <div className=\"col-6 box\">\r\n                  <div className=\"label\">Address</div>\r\n                  <div className=\"val\" id=\"p_addr1\">{job?.address || \"\"}</div>\r\n                  <div className=\"val\" id=\"p_addr2\">{addr2}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid\" style={{ marginTop: \"4px\" }}>\r\n                <div className=\"col-4 box\"><div className=\"label\">County Killed</div><div className=\"val\" id=\"p_county\">{job?.county || \"\"}</div></div>\r\n                <div className=\"col-4 box\"><div className=\"label\">Sex</div><div className=\"val\" id=\"p_sex\">{job?.sex || \"\"}</div></div>\r\n                <div className=\"col-4 box\"><div className=\"label\">Process Type</div><div className=\"val\" id=\"p_proc\">{job?.processType || \"\"}</div></div>\r\n              </div>\r\n\r\n              <div className=\"hr\"></div>\r\n\r\n              <div className=\"grid\">\r\n                <div className=\"col-6 box\">\r\n                  <div className=\"label\">Hind Quarter</div>\r\n                  <div className=\"val\"><span className=\"check\" id=\"ph_s\">{job?.hind && job.hind[\"Hind - Steak\"] ? \"✓\" : \"□\"}</span> {\" \"}Steak</div>\r\n                  <div className=\"val\">\r\n                    <span className=\"check\" id=\"ph_r\">{job?.hind && job.hind[\"Hind - Roast\"] ? \"✓\" : \"□\"}</span> {\" \"}\r\n                    Roast &nbsp; Count: <span id=\"ph_rc\">{(job?.hindRoastCount === \"\" ? \"\" : (job?.hindRoastCount ?? \"\"))}</span>\r\n                  </div>\r\n                  <div className=\"val\"><span className=\"check\" id=\"ph_g\">{job?.hind && job.hind[\"Hind - Grind\"] ? \"✓\" : \"□\"}</span> {\" \"}Grind</div>\r\n                  <div className=\"val\"><span className=\"check\" id=\"ph_n\">{job?.hind && job.hind[\"Hind - None\"] ? \"✓\" : \"□\"}</span> {\" \"}None</div>\r\n                </div>\r\n                <div className=\"col-6 box\">\r\n                  <div className=\"label\">Front Shoulder</div>\r\n                  <div className=\"val\"><span className=\"check\" id=\"pf_s\">{job?.front && job.front[\"Front - Steak\"] ? \"✓\" : \"□\"}</span> {\" \"}Steak</div>\r\n                  <div className=\"val\">\r\n                    <span className=\"check\" id=\"pf_r\">{job?.front && job.front[\"Front - Roast\"] ? \"✓\" : \"□\"}</span> {\" \"}\r\n                    Roast &nbsp; Count: <span id=\"pf_rc\">{(job?.frontRoastCount === \"\" ? \"\" : (job?.frontRoastCount ?? \"\"))}</span>\r\n                  </div>\r\n                  <div className=\"val\"><span className=\"check\" id=\"pf_g\">{job?.front && job.front[\"Front - Grind\"] ? \"✓\" : \"□\"}</span> {\" \"}Grind</div>\r\n                  <div className=\"val\"><span className=\"check\" id=\"pf_n\">{job?.front && job.front[\"Front - None\"] ? \"✓\" : \"□\"}</span> {\" \"}None</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid\" style={{ marginTop: \"4px\" }}>\r\n                <div className=\"col-3 box\"><div className=\"label\">Steak Size</div><div className=\"val\" id=\"p_steak\">{job?.steak || \"\"}</div></div>\r\n                <div className=\"col-3 box\"><div className=\"label\">Steaks / Pkg</div><div className=\"val\" id=\"p_pkg\">{job?.steaksPerPackage || \"\"}</div></div>\r\n                <div className=\"col-3 box\"><div className=\"label\">Burger Size</div><div className=\"val\" id=\"p_burger\">{job?.burgerSize || \"\"}</div></div>\r\n                <div className=\"col-3 box\"><div className=\"label\">Beef Fat</div><div className=\"val\"><span className=\"check\" id=\"p_beef\">{job?.beefFat ? \"✓\" : \"□\"}</span> {\" \"}Add (+$5)</div></div>\r\n              </div>\r\n\r\n              {steakOtherShown && (\r\n                <div className=\"grid\" id=\"steakOtherRow\" style={{ marginTop: \"4px\" }}>\r\n                  <div className=\"col-3 box\"><div className=\"label\">Steak Size (Other)</div><div className=\"val\" id=\"p_steakOther\">{job?.steakOther || \"\"}</div></div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"grid\" style={{ marginTop: \"4px\" }}>\r\n                <div className=\"col-4 box\"><div className=\"label\">Backstrap Prep</div><div className=\"val\" id=\"p_bs_prep\">{job?.backstrapPrep || \"\"}</div></div>\r\n                <div className=\"col-4 box\"><div className=\"label\">Backstrap Thickness</div><div className=\"val\" id=\"p_bs_thick\">{job?.backstrapThickness || \"\"}</div></div>\r\n                <div className=\"col-4 box\"><div className=\"label\">Thickness (Other)</div><div className=\"val\" id=\"p_bs_other\">{job?.backstrapThicknessOther || \"\"}</div></div>\r\n              </div>\r\n\r\n              {specialtyShown && (\r\n                <div className=\"grid\" id=\"specialtyWrap\" style={{ marginTop: \"4px\" }}>\r\n                  <div className=\"col-12 box\">\r\n                    <div className=\"label\">Specialty Products</div>\r\n                    <div className=\"val\"><span className=\"check\" id=\"p_spec_chk\">{\"☑\"}</span> {\" \"}Would like specialty products</div>\r\n                    <div className=\"val\">Summer Sausage (lb): <span id=\"p_spec_ss\">{spec_ss}</span></div>\r\n                    <div className=\"val\">Summer Sausage + Cheese (lb): <span id=\"p_spec_ssc\">{spec_ssc}</span></div>\r\n                    <div className=\"val\">Sliced Jerky (lb): <span id=\"p_spec_jerky\">{spec_jer}</span></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"grid\" style={{ marginTop: \"4px\" }}>\r\n                <div className=\"col-6 box\">\r\n                  <div className=\"label\">Specialty Pounds (lb)</div>\r\n                  <div className=\"val\" id=\"p_spec_lbs\">{(job?.specialtyPounds === \"\" ? \"\" : (job?.specialtyPounds ?? \"\"))}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"box\" style={{ marginTop: \"4px\" }}>\r\n                <div className=\"label\">Notes</div>\r\n                <div className=\"val\" id=\"p_notes\" style={{ whiteSpace: \"pre-wrap\" }}>{job?.notes || \"\"}</div>\r\n              </div>\r\n\r\n              {(job?.webbsOrder) && (\r\n                <div className=\"grid\" style={{ marginTop: \"4px\" }}>\r\n                  <div className=\"col-12 box\" id=\"webbsDetails\">\r\n                    <div className=\"label\">Webbs Details</div>\r\n                    <div className=\"val\"><span className=\"check\" id=\"p_webbs_chk\">{\"✓\"}</span> {\" \"}Webbs Order (+$20)</div>\r\n                    <div className=\"val\">Form #: <span id=\"p_webbs_form\">{job?.webbsFormNumber || \"\"}</span></div>\r\n                    <div className=\"val\">Pounds: <span id=\"p_webbs_lbs\">{(job?.webbsPounds === \"\" ? \"\" : (job?.webbsPounds ?? \"\"))}</span></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"hr\"></div>\r\n\r\n              <div className=\"row\">\r\n                <div style={{ flex: 1 }}>\r\n                  <div className=\"label\">Paid</div>\r\n                  <div className=\"val\"><span className=\"check\" id=\"p_paid\">{(job?.paid || job?.Paid) ? \"✓\" : \"□\"}</span> {\" \"}Paid in full</div>\r\n                </div>\r\n                <div style={{ flex: 1 }}>\r\n                  <div className=\"label\">Signature (on pickup)</div>\r\n                  <div style={{ height: \"26px\" }}></div>\r\n                  <div className=\"sig\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1656, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/intake/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useMemo, useState, useRef } from 'react';\r\nimport { useSearchParams } from 'next/navigation';\r\nimport { progress, saveJob, getJob, searchJobs } from '@/lib/api';\r\nimport PrintSheet from '@/app/components/PrintSheet';\r\n\r\n/* ---------------- Types ---------------- */\r\ntype CutsBlock = {\r\n  'Hind - Steak'?: boolean;\r\n  'Hind - Roast'?: boolean;\r\n  'Hind - Grind'?: boolean;\r\n  'Hind - None'?: boolean;\r\n  'Front - Steak'?: boolean;\r\n  'Front - Roast'?: boolean;\r\n  'Front - Grind'?: boolean;\r\n  'Front - None'?: boolean;\r\n};\r\n\r\ntype Job = {\r\n  tag?: string;\r\n  confirmation?: string;\r\n\r\n  customer?: string;\r\n  phone?: string;\r\n  email?: string;\r\n  address?: string;\r\n  city?: string;\r\n  state?: string;\r\n  zip?: string;\r\n\r\n  county?: string;\r\n  dropoff?: string; // yyyy-mm-dd\r\n  sex?: '' | 'Buck' | 'Doe';\r\n  processType?: '' | 'Standard Processing' | 'Caped' | 'Skull-Cap' | 'European';\r\n\r\n  status?: string;            // regular status\r\n  capingStatus?: string;      // only shown if Caped\r\n  webbsStatus?: string;       // only shown if Webbs\r\n\r\n  steak?: string;\r\n  steakOther?: string;\r\n  burgerSize?: string;\r\n  steaksPerPackage?: string;\r\n  beefFat?: boolean;\r\n\r\n  hindRoastCount?: string;\r\n  frontRoastCount?: string;\r\n\r\n  hind?: CutsBlock;\r\n  front?: CutsBlock;\r\n\r\n  backstrapPrep?: '' | 'Whole' | 'Sliced' | 'Butterflied';\r\n  backstrapThickness?: '' | '1/2\"' | '3/4\"' | 'Other';\r\n  backstrapThicknessOther?: string;\r\n\r\n  specialtyProducts?: boolean;\r\n  summerSausageLbs?: string | number;\r\n  summerSausageCheeseLbs?: string | number;\r\n  slicedJerkyLbs?: string | number;\r\n  specialtyPounds?: string;\r\n\r\n  notes?: string;\r\n\r\n  webbsOrder?: boolean;\r\n  webbsFormNumber?: string;\r\n  webbsPounds?: string;\r\n\r\n  price?: number | string; // optional override\r\n\r\n  // legacy + new paid flags\r\n  Paid?: boolean;\r\n  paid?: boolean;\r\n  paidProcessing?: boolean;  // NEW\r\n  paidSpecialty?: boolean;   // NEW\r\n};\r\n\r\n/* --------------- Helpers --------------- */\r\nconst todayISO = () => {\r\n  const d = new Date();\r\n  d.setMinutes(d.getMinutes() - d.getTimezoneOffset());\r\n  return d.toISOString().slice(0, 10);\r\n};\r\n\r\nconst normProc = (s?: string) => {\r\n  const v = String(s || '').toLowerCase();\r\n  if (v.includes('cape') && !v.includes('skull')) return 'Caped';\r\n  if (v.includes('skull')) return 'Skull-Cap';\r\n  if (v.includes('euro')) return 'European';\r\n  if (v.includes('standard')) return 'Standard Processing';\r\n  return '';\r\n};\r\n\r\n// Base (processing) price only: process type + beef fat + webbs fee\r\nconst suggestedProcessingPrice = (proc?: string, beef?: boolean, webbs?: boolean) => {\r\n  const p = normProc(proc);\r\n  const base =\r\n    p === 'Caped' ? 150 :\r\n    ['Standard Processing', 'Skull-Cap', 'European'].includes(p) ? 130 : 0;\r\n  if (!base) return 0;\r\n  return base + (beef ? 5 : 0) + (webbs ? 20 : 0);\r\n};\r\n\r\n// For specialty fields, parse int lbs\r\nconst toInt = (val: any) => {\r\n  const n = parseInt(String(val ?? '').replace(/[^0-9]/g, ''), 10);\r\n  return Number.isFinite(n) && n > 0 ? n : 0;\r\n};\r\n\r\nconst asBool = (v: any): boolean => {\r\n  if (typeof v === 'boolean') return v;\r\n  const s = String(v ?? '').trim().toLowerCase();\r\n  return ['true','yes','y','1','on','paid','x','✓','✔'].includes(s);\r\n};\r\n\r\n\r\n/* ---- Fixed status choices + guards ---- */\r\nconst STATUS_MAIN  = ['Dropped Off', 'Processing', 'Finished', 'Called', 'Picked Up'] as const;\r\nconst STATUS_CAPE  = ['Dropped Off', 'Caped', 'Called', 'Picked Up'] as const;\r\nconst STATUS_WEBBS = ['Dropped Off', 'Sent', 'Delivered', 'Called', 'Picked Up'] as const;\r\n\r\nconst coerce = (v: string | undefined, list: readonly string[]) =>\r\n  list.includes(String(v)) ? String(v) : list[0];\r\n\r\n/* --------------- Component -------------- */\r\nexport default function IntakePage() {\r\n  const sp = useSearchParams();\r\n  const tagFromUrl = sp.get('tag') ?? '';\r\n\r\n  const [job, setJob] = useState<Job>({\r\n    tag: tagFromUrl || '',\r\n    dropoff: todayISO(),\r\n    status: 'Dropped Off',\r\n    capingStatus: '',\r\n    webbsStatus: '',\r\n    hind: {\r\n      'Hind - Steak': false,\r\n      'Hind - Roast': false,\r\n      'Hind - Grind': false,\r\n      'Hind - None': false,\r\n    },\r\n    front: {\r\n      'Front - Steak': false,\r\n      'Front - Roast': false,\r\n      'Front - Grind': false,\r\n      'Front - None': false,\r\n    },\r\n    beefFat: false,\r\n    webbsOrder: false,\r\n    Paid: false,\r\n    paid: false,\r\n    paidProcessing: false, // NEW\r\n    paidSpecialty: false,  // NEW\r\n    specialtyProducts: false,\r\n  });\r\n\r\n  const [busy, setBusy] = useState(false);\r\n  const [msg, setMsg] = useState<string>('');\r\n  const tagRef = useRef<HTMLInputElement|null>(null);\r\n\r\n  // Focus Tag on mount\r\n  useEffect(() => {\r\n    tagRef.current?.focus();\r\n  }, []);\r\n\r\n  // Load existing job by tag (if present)\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!tagFromUrl) return;\r\n      try {\r\n        const res = await getJob(tagFromUrl);\r\n        if (res?.exists && res.job) {\r\n          const j: any = res.job;\r\n          setJob((prev) => ({\r\n            ...prev,\r\n            ...j,\r\n            tag: j.tag || tagFromUrl,\r\n            dropoff: j.dropoff || todayISO(),\r\n            status: coerce(j.status || prev.status || 'Dropped Off', STATUS_MAIN),\r\n            capingStatus: coerce(j.capingStatus || (j.processType === 'Caped' ? 'Dropped Off' : ''), STATUS_CAPE),\r\n            webbsStatus: coerce(j.webbsStatus || (j.webbsOrder ? 'Dropped Off' : ''), STATUS_WEBBS),\r\n\r\n            hind: {\r\n              'Hind - Steak': asBool(j?.hind)?.['Hind - Steak'],\r\n              'Hind - Roast': asBool(j?.hind)?.['Hind - Roast'],\r\n              'Hind - Grind': asBool(j?.hind)?.['Hind - Grind'],\r\n              'Hind - None' : asBool(j?.hind)?.['Hind - None'],\r\n            },\r\n            front: {\r\n              'Front - Steak': asBool(j?.front)?.['Front - Steak'],\r\n              'Front - Roast': asBool(j?.front)?.['Front - Roast'],\r\n              'Front - Grind': asBool(j?.front)?.['Front - Grind'],\r\n              'Front - None' : asBool(j?.front)?.['Front - None'],\r\n            },\r\n\r\n            // Confirmation mapping (preserve if sheet uses other header)\r\n            confirmation:\r\n              j.confirmation ??\r\n              j['Confirmation #'] ??\r\n              j['Confirmation'] ??\r\n              prev.confirmation ??\r\n              '',\r\n\r\n            // PAID flags: load both split and legacy\r\n            Paid: !!(j.Paid ?? j.paid ?? (j.paidProcessing && j.paidSpecialty)),\r\n            paid: !!(j.Paid ?? j.paid ?? (j.paidProcessing && j.paidSpecialty)),\r\n            paidProcessing: !!(j.paidProcessing ?? j.PaidProcessing ?? j.Paid_Processing),\r\n            paidSpecialty:  !!(j.paidSpecialty  ?? j.PaidSpecialty  ?? j.Paid_Specialty),\r\n\r\n            specialtyProducts: asBool(j.specialtyProducts),\r\n          }));\r\n        }\r\n      } catch (e: any) {\r\n        setMsg(`Load failed: ${e?.message || e}`);\r\n      }\r\n    })();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tagFromUrl]);\r\n\r\n  // Derived UI toggles + pricing\r\n  const processingPrice = useMemo(\r\n    () => suggestedProcessingPrice(job.processType, !!job.beefFat, !!job.webbsOrder),\r\n    [job.processType, job.beefFat, job.webbsOrder]\r\n  );\r\n\r\n  const specialtyPrice = useMemo(() => {\r\n    if (!job.specialtyProducts) return 0;\r\n    const ss  = toInt(job.summerSausageLbs);\r\n    const ssc = toInt(job.summerSausageCheeseLbs);\r\n    const jer = toInt(job.slicedJerkyLbs);\r\n    return ss * 4.25 + ssc * 4.60 + jer * 15.0;\r\n  }, [job.specialtyProducts, job.summerSausageLbs, job.summerSausageCheeseLbs, job.slicedJerkyLbs]);\r\n\r\n  const totalPrice = processingPrice + specialtyPrice;\r\n\r\n  const hindRoastOn = !!job.hind?.['Hind - Roast'];\r\n  const frontRoastOn = !!job.front?.['Front - Roast'];\r\n  const isWholeBackstrap = job.backstrapPrep === 'Whole';\r\n  const hasSpecialty = asBool(job.specialtyProducts);\r\n\r\n  const needsBackstrapOther = !isWholeBackstrap && job.backstrapThickness === 'Other';\r\n  const needsSteakOther = job.steak === 'Other';\r\n  const capedOn = job.processType === 'Caped';\r\n  const webbsOn = !!job.webbsOrder;\r\n\r\n  // Keep conditional statuses defaulted if newly toggled on and empty\r\n  useEffect(() => {\r\n    setJob((p) => {\r\n      const next: Job = { ...p };\r\n      if (capedOn && !next.capingStatus) next.capingStatus = 'Dropped Off';\r\n      if (webbsOn && !next.webbsStatus) next.webbsStatus = 'Dropped Off';\r\n      return next;\r\n    });\r\n  }, [capedOn, webbsOn]);\r\n\r\n  /* ---------- Validation ---------- */\r\n  const validate = (): string[] => {\r\n    const missing: string[] = [];\r\n    if (!job.customer) missing.push('Customer Name');\r\n    if (!job.phone) missing.push('Phone');\r\n    if (!job.email) missing.push('Email');\r\n    if (!job.address) missing.push('Address');\r\n    if (!job.city) missing.push('City');\r\n    if (!job.state) missing.push('State');\r\n    if (!job.zip) missing.push('Zip');\r\n    if (!job.county) missing.push('County Killed');\r\n    if (!job.dropoff) missing.push('Drop-off Date');\r\n    if (!job.sex) missing.push('Deer Sex');\r\n    if (!job.processType) missing.push('Process Type');\r\n    return missing;\r\n  };\r\n\r\n  /* ---------- Save ---------- */\r\n  const onSave = async () => {\r\n    setMsg('');\r\n    const missing = validate();\r\n    if (missing.length) {\r\n      setMsg(`Missing or invalid: ${missing.join(', ')}`);\r\n      return;\r\n    }\r\n    const payload: Job = {\r\n      ...job,\r\n      status: coerce(job.status, STATUS_MAIN),\r\n      capingStatus: job.processType === 'Caped' ? coerce(job.capingStatus, STATUS_CAPE) : '',\r\n      webbsStatus: job.webbsOrder ? coerce(job.webbsStatus, STATUS_WEBBS) : '',\r\n\r\n      // keep legacy 'Paid' in sync, and send split flags\r\n      Paid: !!(job.Paid ?? job.paid ?? (job.paidProcessing && job.paidSpecialty)),\r\n      paid: !!(job.Paid ?? job.paid ?? (job.paidProcessing && job.paidSpecialty)),\r\n      paidProcessing: !!job.paidProcessing,\r\n      paidSpecialty:  job.specialtyProducts ? !!job.paidSpecialty : false,\r\n\r\n      // numeric normalizations for specialty lbs\r\n      summerSausageLbs: job.specialtyProducts ? String(toInt(job.summerSausageLbs)) : '',\r\n      summerSausageCheeseLbs: job.specialtyProducts ? String(toInt(job.summerSausageCheeseLbs)) : '',\r\n      slicedJerkyLbs: job.specialtyProducts ? String(toInt(job.slicedJerkyLbs)) : '',\r\n    };\r\n    try {\r\n      setBusy(true);\r\n      const res = await saveJob(payload);\r\n      if (!res?.ok) {\r\n        setMsg(res?.error || 'Save failed');\r\n        return;\r\n      }\r\n      setMsg('Saved ✓');\r\n      if (job.tag) {\r\n        const fresh = await getJob(job.tag);\r\n        if (fresh?.exists && fresh.job) {\r\n          const j: any = fresh.job;\r\n          setJob((p) => ({\r\n            ...p,\r\n            ...j,\r\n            // preserve/mirror confirmation & paid flags\r\n            confirmation:\r\n              j.confirmation ?? j['Confirmation #'] ?? j['Confirmation'] ?? p.confirmation ?? '',\r\n            Paid: !!(j.Paid ?? j.paid ?? (j.paidProcessing && j.paidSpecialty)),\r\n            paid: !!(j.Paid ?? j.paid ?? (j.paidProcessing && j.paidSpecialty)),\r\n            paidProcessing: !!(j.paidProcessing ?? j.PaidProcessing ?? j.Paid_Processing),\r\n            paidSpecialty:  !!(j.paidSpecialty  ?? j.PaidSpecialty  ?? j.Paid_Specialty),\r\n          }));\r\n        }\r\n      }\r\n    } catch (e: any) {\r\n      setMsg(e?.message || String(e));\r\n    } finally {\r\n      setBusy(false);\r\n      setTimeout(() => setMsg(''), 1500);\r\n    }\r\n  };\r\n\r\n  /* ---------- Small setters ---------- */\r\n  const setVal = <K extends keyof Job>(k: K, v: Job[K]) =>\r\n    setJob((p) => ({ ...p, [k]: v }));\r\n\r\n  const setHind = (k: keyof Required<CutsBlock>) =>\r\n    setJob((p) => ({ ...p, hind: { ...(p.hind || {}), [k]: !(p.hind?.[k]) } }));\r\n\r\n  const setFront = (k: keyof Required<CutsBlock>) =>\r\n    setJob((p) => ({ ...p, front: { ...(p.front || {}), [k]: !(p.front?.[k]) } }));\r\n\r\n  /* ---------------- UI ---------------- */\r\n  return (\r\n    <div className=\"form-card\">\r\n      {/* ------- SCREEN UI ONLY ------- */}\r\n      <div className=\"screen-only\">\r\n        <h2>Deer Intake</h2>\r\n\r\n        {/* Summary bar with split pricing (unchanged look) */}\r\n        <div className=\"summary\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <label>Tag Number</label>\r\n              <input\r\n                ref={tagRef}\r\n                value={job.tag || ''}\r\n                onChange={(e) => setVal('tag', e.target.value)}\r\n                placeholder=\"e.g. 1234\"\r\n              />\r\n              <div className=\"muted\" style={{fontSize:12}}>Deer Tag</div>\r\n            </div>\r\n\r\n            <div className=\"col price\">\r\n              <label>Processing Price</label>\r\n              <div className=\"money\">{processingPrice.toFixed(2)}</div>\r\n              <div className=\"muted\" style={{fontSize:12}}>Proc. type + beef fat + Webbs fee</div>\r\n            </div>\r\n\r\n            <div className=\"col price\">\r\n              <label>Specialty Price</label>\r\n              <div className=\"money\">{specialtyPrice.toFixed(2)}</div>\r\n              <div className=\"muted\" style={{fontSize:12}}>Sausage/Jerky lbs</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row small\">\r\n            <div className=\"col total\">\r\n              <label>Total (preview)</label>\r\n              <div className=\"money total\">{totalPrice.toFixed(2)}</div>\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <label>Status</label>\r\n              <select\r\n                value={coerce(job.status, STATUS_MAIN)}\r\n                onChange={(e) => setVal('status', e.target.value)}\r\n              >\r\n                {STATUS_MAIN.map(s => <option key={s} value={s}>{s}</option>)}\r\n              </select>\r\n            </div>\r\n\r\n            {job.processType === 'Caped' && (\r\n              <div className=\"col\">\r\n                <label>Caping Status</label>\r\n                <select\r\n                  value={coerce(job.capingStatus, STATUS_CAPE)}\r\n                  onChange={(e) => setVal('capingStatus', e.target.value)}\r\n                >\r\n                  {STATUS_CAPE.map(s => <option key={s} value={s}>{s}</option>)}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {job.webbsOrder && (\r\n              <div className=\"col\">\r\n                <label>Webbs Status</label>\r\n                <select\r\n                  value={coerce(job.webbsStatus, STATUS_WEBBS)}\r\n                  onChange={(e) => setVal('webbsStatus', e.target.value)}\r\n                >\r\n                  {STATUS_WEBBS.map(s => <option key={s} value={s}>{s}</option>)}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"col\">\r\n              <label>Paid</label>\r\n              <div className=\"pillrow\">\r\n                <div className={`pill ${job.paidProcessing ? 'on' : ''}`}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.paidProcessing}\r\n                    onChange={(e) => {\r\n                  const v = e.target.checked;\r\n                  setJob((prev) => ({\r\n                    ...prev,\r\n                    Paid: v,\r\n                    paid: v,\r\n                    paidProcessing: v ? true : prev.paidProcessing,\r\n                    paidSpecialty: hasSpecialty ? (v ? true : prev.paidSpecialty) : false,\r\n                  }));\r\n                }}\r\n                  />\r\n                  <span className=\"badge\">{job.paidProcessing ? 'Processing Paid' : 'Processing Unpaid'}</span>\r\n                </div>\r\n\r\n                {hasSpecialty && (\r\n                <div className={`pill ${job.paidSpecialty ? 'on' : ''}`}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.paidSpecialty}\r\n                    onChange={(e) => {\r\n                      const v = e.target.checked;\r\n                      setJob((prev) => ({\r\n                        ...prev,\r\n                        paidSpecialty: v,\r\n                        Paid: v && !!prev.paidProcessing,\r\n                        paid: v && !!prev.paidProcessing,\r\n                      }));\r\n                    }}\r\n                  />\r\n                  <span className=\"badge\">{job.paidSpecialty ? 'Specialty Paid' : 'Specialty Unpaid'}</span>\r\n                </div>\r\n                )}\r\n\r\n                <div className={`pill ${((!!job.paidProcessing && !!job.paidSpecialty) || !!job.Paid) ? 'on' : ''}`}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={hasSpecialty ? (asBool(job.Paid) || (asBool(job.paidProcessing) && asBool(job.paidSpecialty))) : (asBool(job.Paid) || asBool(job.paidProcessing))}\r\n                    onChange={(e) => {\r\n                      const v = e.target.checked;\r\n                      setJob((prev) => ({\r\n                        ...prev,\r\n                        Paid: v,\r\n                        paid: v,\r\n                        paidProcessing: v ? true : prev.paidProcessing,\r\n                        paidSpecialty: v ? true : prev.paidSpecialty,\r\n                      }));\r\n                    }}\r\n                  />\r\n                  <span className=\"badge\">{((!!job.paidProcessing && !!job.paidSpecialty) || !!job.Paid) ? 'Paid in Full' : 'Unpaid'}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Customer */}\r\n        <section>\r\n          <h3>Customer</h3>\r\n          <div className=\"grid\">\r\n            <div className=\"c3\">\r\n              <label>Confirmation #</label>\r\n              <input\r\n                value={job.confirmation || ''}\r\n                onChange={(e) => setVal('confirmation', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c6\">\r\n              <label>Customer Name</label>\r\n              <input\r\n                value={job.customer || ''}\r\n                onChange={(e) => setVal('customer', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Phone</label>\r\n              <input\r\n                value={job.phone || ''}\r\n                onChange={(e) => setVal('phone', e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"c4\">\r\n              <label>Email</label>\r\n              <input\r\n                value={job.email || ''}\r\n                onChange={(e) => setVal('email', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c8\">\r\n              <label>Address</label>\r\n              <input\r\n                value={job.address || ''}\r\n                onChange={(e) => setVal('address', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c4\">\r\n              <label>City</label>\r\n              <input\r\n                value={job.city || ''}\r\n                onChange={(e) => setVal('city', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c4\">\r\n              <label>State</label>\r\n              <input\r\n                value={job.state || ''}\r\n                onChange={(e) => setVal('state', e.target.value)}\r\n                placeholder=\"IN / KY / …\"\r\n              />\r\n            </div>\r\n            <div className=\"c4\">\r\n              <label>Zip</label>\r\n              <input\r\n                value={job.zip || ''}\r\n                onChange={(e) => setVal('zip', e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Hunt Details */}\r\n        <section>\r\n          <h3>Hunt Details</h3>\r\n          <div className=\"grid\">\r\n            <div className=\"c4\">\r\n              <label>County Killed</label>\r\n              <input\r\n                value={job.county || ''}\r\n                onChange={(e) => setVal('county', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Drop-off Date</label>\r\n              <input\r\n                type=\"date\"\r\n                value={job.dropoff || ''}\r\n                onChange={(e) => setVal('dropoff', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c2\">\r\n              <label>Deer Sex</label>\r\n              <select\r\n                value={job.sex || ''}\r\n                onChange={(e) => setVal('sex', e.target.value as Job['sex'])}\r\n              >\r\n                <option value=\"\">—</option>\r\n                <option value=\"Buck\">Buck</option>\r\n                <option value=\"Doe\">Doe</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Process Type</label>\r\n              <select\r\n                value={job.processType || ''}\r\n                onChange={(e) =>\r\n                  setVal('processType', e.target.value as Job['processType'])\r\n                }\r\n              >\r\n                <option value=\"\">—</option>\r\n                <option>Standard Processing</option>\r\n                <option>Caped</option>\r\n                <option>Skull-Cap</option>\r\n                <option>European</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Cuts */}\r\n        <section>\r\n          <h3>Cuts</h3>\r\n          <div className=\"grid\">\r\n            <div className=\"c6\">\r\n              <label>Hind Quarter</label>\r\n              <div className=\"checks\">\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.hind?.['Hind - Steak']}\r\n                    onChange={() => setHind('Hind - Steak')}\r\n                  />\r\n                  <span>Steak</span>\r\n                </label>\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.hind?.['Hind - Roast']}\r\n                    onChange={() => setHind('Hind - Roast')}\r\n                  />\r\n                  <span>Roast</span>\r\n                </label>\r\n                <span className=\"count\">\r\n                  <span className=\"muted\">Count</span>\r\n                  <input\r\n                    className=\"countInp\"\r\n                    value={hindRoastOn ? (job.hindRoastCount || '') : ''}\r\n                    onChange={(e) => setVal('hindRoastCount', e.target.value)}\r\n                    disabled={!hindRoastOn}\r\n                    inputMode=\"numeric\"\r\n                  />\r\n                </span>\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.hind?.['Hind - Grind']}\r\n                    onChange={() => setHind('Hind - Grind')}\r\n                  />\r\n                  <span>Grind</span>\r\n                </label>\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.hind?.['Hind - None']}\r\n                    onChange={() => setHind('Hind - None')}\r\n                  />\r\n                  <span>None</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"c6\">\r\n              <label>Front Shoulder</label>\r\n              <div className=\"checks\">\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.front?.['Front - Steak']}\r\n                    onChange={() => setFront('Front - Steak')}\r\n                  />\r\n                  <span>Steak</span>\r\n                </label>\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.front?.['Front - Roast']}\r\n                    onChange={() => setFront('Front - Roast')}\r\n                  />\r\n                  <span>Roast</span>\r\n                </label>\r\n                <span className=\"count\">\r\n                  <span className=\"muted\">Count</span>\r\n                  <input\r\n                    className=\"countInp\"\r\n                    value={frontRoastOn ? (job.frontRoastCount || '') : ''}\r\n                    onChange={(e) => setVal('frontRoastCount', e.target.value)}\r\n                    disabled={!frontRoastOn}\r\n                    inputMode=\"numeric\"\r\n                  />\r\n                </span>\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.front?.['Front - Grind']}\r\n                    onChange={() => setFront('Front - Grind')}\r\n                  />\r\n                  <span>Grind</span>\r\n                </label>\r\n                <label className=\"chk\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={!!job.front?.['Front - None']}\r\n                    onChange={() => setFront('Front - None')}\r\n                  />\r\n                  <span>None</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Packaging & Add-ons */}\r\n        <section>\r\n          <h3>Packaging & Add-ons</h3>\r\n          <div className=\"grid\">\r\n            <div className=\"c3\">\r\n              <label>Steak Size</label>\r\n              <select\r\n                value={job.steak || ''}\r\n                onChange={(e) => setVal('steak', e.target.value)}\r\n              >\r\n                <option value=\"\">—</option>\r\n                <option>1/2\"</option>\r\n                <option>3/4\"</option>\r\n                <option>Other</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Steaks per Package</label>\r\n              <select\r\n                value={job.steaksPerPackage || ''}\r\n                onChange={(e) => setVal('steaksPerPackage', e.target.value)}\r\n              >\r\n                <option value=\"\">—</option>\r\n                <option>4</option>\r\n                <option>6</option>\r\n                <option>8</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Burger Size</label>\r\n              <select\r\n                value={job.burgerSize || ''}\r\n                onChange={(e) => setVal('burgerSize', e.target.value)}\r\n              >\r\n                <option value=\"\">—</option>\r\n                <option>1 lb</option>\r\n                <option>2 lb</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"c3 rowInline\">\r\n              <label className=\"chk tight\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!!job.beefFat}\r\n                  onChange={(e) => setVal('beefFat', e.target.checked)}\r\n                />\r\n                <span>Beef fat</span>\r\n                <span className=\"muted\"> (+$5)</span>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"c3\">\r\n              <label>Steak Size (Other)</label>\r\n              <input\r\n                value={needsSteakOther ? (job.steakOther || '') : ''}\r\n                onChange={(e) => setVal('steakOther', e.target.value)}\r\n                disabled={!needsSteakOther}\r\n                placeholder='e.g., 5/8\"'\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Backstrap */}\r\n        <section>\r\n          <h3>Backstrap</h3>\r\n          <div className=\"grid\">\r\n            <div className=\"c4\">\r\n              <label>Prep</label>\r\n              <select\r\n                value={job.backstrapPrep || ''}\r\n                onChange={(e) =>\r\n                  setVal('backstrapPrep', e.target.value as Job['backstrapPrep'])\r\n                }\r\n              >\r\n                <option value=\"\">—</option>\r\n                <option>Whole</option>\r\n                <option>Sliced</option>\r\n                <option>Butterflied</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"c4\">\r\n              <label>Thickness</label>\r\n              <select\r\n                value={isWholeBackstrap ? '' : (job.backstrapThickness || '')}\r\n                onChange={(e) =>\r\n                  setVal('backstrapThickness', e.target.value as Job['backstrapThickness'])\r\n                }\r\n                disabled={isWholeBackstrap}\r\n              >\r\n                <option value=\"\">—</option>\r\n                <option>1/2\"</option>\r\n                <option>3/4\"</option>\r\n                <option>Other</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"c4\">\r\n              <label>Thickness (Other)</label>\r\n              <input\r\n                value={needsBackstrapOther ? (job.backstrapThicknessOther || '') : ''}\r\n                onChange={(e) => setVal('backstrapThicknessOther', e.target.value)}\r\n                disabled={!needsBackstrapOther}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Specialty Products */}\r\n        <section>\r\n          <h3>McAfee Specialty Products</h3>\r\n          <div className=\"grid\">\r\n            <div className=\"c3 rowInline\">\r\n              <label className=\"chk tight\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!!job.specialtyProducts}\r\n                  onChange={(e) => setVal('specialtyProducts', e.target.checked)}\r\n                />\r\n                <span><strong>Would like specialty products</strong></span>\r\n              </label>\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Summer Sausage (lb)</label>\r\n              <input\r\n                inputMode=\"numeric\"\r\n                value={job.specialtyProducts ? String(job.summerSausageLbs ?? '') : ''}\r\n                onChange={(e) => setVal('summerSausageLbs', e.target.value)}\r\n                disabled={!job.specialtyProducts}\r\n              />\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Summer Sausage + Cheese (lb)</label>\r\n              <input\r\n                inputMode=\"numeric\"\r\n                value={job.specialtyProducts ? String(job.summerSausageCheeseLbs ?? '') : ''}\r\n                onChange={(e) => setVal('summerSausageCheeseLbs', e.target.value)}\r\n                disabled={!job.specialtyProducts}\r\n              />\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Sliced Jerky (lb)</label>\r\n              <input\r\n                inputMode=\"numeric\"\r\n                value={job.specialtyProducts ? String(job.slicedJerkyLbs ?? '') : ''}\r\n                onChange={(e) => setVal('slicedJerkyLbs', e.target.value)}\r\n                disabled={!job.specialtyProducts}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Notes */}\r\n        <section>\r\n          <h3>Notes</h3>\r\n          <textarea\r\n            rows={3}\r\n            value={job.notes || ''}\r\n            onChange={(e) => setVal('notes', e.target.value)}\r\n          />\r\n        </section>\r\n\r\n        {/* Webbs */}\r\n        <section>\r\n          <h3>Webbs</h3>\r\n          <div className=\"grid\">\r\n            <div className=\"c3 rowInline\">\r\n              <label className=\"chk tight\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!!job.webbsOrder}\r\n                  onChange={(e) => setVal('webbsOrder', e.target.checked)}\r\n                />\r\n                <span><strong>Webbs Order</strong></span>\r\n                <span className=\"muted\"> (+$20 fee)</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"c4\">\r\n              <label>Webbs Order Form Number</label>\r\n              <input\r\n                value={job.webbsFormNumber || ''}\r\n                onChange={(e) => setVal('webbsFormNumber', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"c3\">\r\n              <label>Webbs Pounds (lb)</label>\r\n              <input\r\n                inputMode=\"numeric\"\r\n                value={job.webbsPounds || ''}\r\n                onChange={(e) => setVal('webbsPounds', e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Actions */}\r\n        <div className=\"actions\">\r\n          <div className={`status ${msg.startsWith('Save') ? 'ok' : msg ? 'err' : ''}`}>{msg}</div>\r\n\r\n          <button\r\n            className=\"btn\"\r\n            type=\"button\"\r\n            onClick={() => window.print()}\r\n            disabled={busy}\r\n          >\r\n            Print\r\n          </button>\r\n\r\n          <button className=\"btn\" onClick={onSave} disabled={busy}>\r\n            {busy ? 'Saving…' : 'Save'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ------- PRINT ONLY (no overlay on screen) ------- */}\r\n      <div className=\"print-only\">\r\n        <PrintSheet job={job} />\r\n      </div>\r\n\r\n      {/* Styles */}\r\n      <style jsx>{`\r\n        .wrap { max-width: 980px; margin: 16px auto 60px; padding: 12px; font-family: Arial, sans-serif; }\r\n        h2 { margin: 8px 0; }\r\n        h3 { margin: 16px 0 8px; }\r\n\r\n        label { font-size: 12px; font-weight: 700; color: #0b0f12; display: block; margin-bottom: 4px; }\r\n        input, select, textarea {\r\n          width: 100%; padding: 6px 8px; border: 1px solid #d8e3f5; border-radius: 8px; background: #fbfdff; box-sizing: border-box;\r\n        }\r\n        textarea { resize: vertical; }\r\n\r\n        .grid { display: grid; gap: 8px; grid-template-columns: repeat(12, 1fr); }\r\n        .c3{grid-column: span 3} .c4{grid-column: span 4} .c6{grid-column: span 6} .c8{grid-column: span 8}\r\n\r\n        .rowInline { display: flex; align-items: center; padding-top: 22px; gap: 8px; }\r\n        .checks { display: flex; gap: 10px; align-items: center; flex-wrap: wrap; }\r\n        .chk { display: inline-flex; align-items: center; gap: 6px; }\r\n        .muted { color: #6b7280; font-size: 12px; }\r\n\r\n        .summary { position: sticky; top: 0; background: #f5f8ff; border: 1px solid #d8e3f5; border-radius: 10px; padding: 8px; margin-bottom: 10px; box-shadow: 0 2px 10px rgba(0,0,0,.06); z-index:5; }\r\n        .summary .row { display: grid; gap: 8px; grid-template-columns: repeat(3, 1fr); align-items: end; }\r\n        .summary .row.small { margin-top: 6px; grid-template-columns: repeat(4, 1fr); }\r\n        .summary .col { display: flex; flex-direction: column; gap: 4px; }\r\n        .summary .price .money { font-weight: 800; text-align: right; background: #fff; border: 1px solid #d8e3f5; border-radius: 8px; padding: 6px 8px; }\r\n        .summary .total .money.total { font-weight: 900; }\r\n\r\n        /* Paid pills row - horizontal */\r\n        .pillrow {\r\n          display: flex;\r\n          gap: 10px;\r\n          align-items: center;\r\n          flex-wrap: nowrap;\r\n        }\r\n        .pill { \r\n          display: inline-flex; \r\n          align-items: center; \r\n          gap: 8px; \r\n          padding: 6px 10px; \r\n          border: 2px solid #eab308; \r\n          background: #fff7db; \r\n          border-radius: 999px; \r\n          white-space: nowrap;\r\n        }\r\n        .pill.on { border-color: #10b981; background: #ecfdf5; }\r\n        .badge { font-weight: 800; font-size: 11px; padding: 2px 8px; border-radius: 999px; border: 1px solid currentColor; }\r\n\r\n        .count { display: inline-flex; align-items: center; gap: 6px; }\r\n        .countInp { width: 70px; text-align: center; }\r\n\r\n        .actions { position: sticky; bottom: 0; background:#fff; padding: 10px 0; display: flex; justify-content: flex-end; gap: 8px; margin-top: 12px; align-items: center; border-top:1px solid #eef2f7; }\r\n        .btn { padding: 8px 12px; border: 1px solid #cbd5e1; border-radius: 8px; background: #155acb; color: #fff; font-weight: 800; cursor: pointer; }\r\n        .btn:disabled { opacity: .6; cursor: not-allowed; }\r\n        .status { min-height: 20px; font-size: 12px; color: #334155; margin-right:auto; }\r\n        .status.ok { color: #065f46; }\r\n        .status.err { color: #b91c1c; }\r\n\r\n        /* Hide print layout on screen; show only in print */\r\n        .print-only { display: none; }\r\n        @media print {\r\n          .screen-only { display: none !important; }\r\n          .print-only { display: block !important; }\r\n        }\r\n\r\n        /* allow wrap on narrow screens so UI doesn’t overflow */\r\n        @media (max-width: 900px) {\r\n          .summary .row.small { grid-template-columns: 1fr 1fr; }\r\n        }\r\n        @media (max-width: 720px) {\r\n          .grid { grid-template-columns: 1fr; }\r\n          .summary .row { grid-template-columns: 1fr; }\r\n          .summary .row.small { grid-template-columns: 1fr; }\r\n          .rowInline { padding-top: 0; }\r\n          .pillrow { flex-wrap: wrap; }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}