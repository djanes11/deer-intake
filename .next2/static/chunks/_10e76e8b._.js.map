{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/lib/api.ts"],"sourcesContent":["const BASE = '/api/gas2';\r\n\r\nexport type GetJobResp = { ok: boolean; exists: boolean; job?: any; error?: string };\r\nexport type SaveResp   = { ok: boolean; error?: string; row?: number };\r\nexport type ProgressResp = { ok: boolean; nextStatus?: 'Processing'|'Finished'|null; error?: string };\r\nexport type SearchJobsResp = { ok: boolean; rows: any[]; total?: number; error?: string };\r\n\r\nasync function fetchJson(url: string, init?: RequestInit, attempts = 3, timeoutMs = 7000) {\r\n  let lastErr: any = null;\r\n  for (let i = 0; i < attempts; i++) {\r\n    const ctrl = new AbortController();\r\n    const to = setTimeout(() => ctrl.abort(), timeoutMs);\r\n    try {\r\n      const res = await fetch(url, { cache: 'no-store', ...init, signal: ctrl.signal });\r\n      clearTimeout(to);\r\n      const data = await res.json().catch(() => ({}));\r\n      if (res.ok) return data;\r\n      lastErr = data?.error || `HTTP ${res.status}`;\r\n      // retry on transient\r\n      if ([429, 502, 503, 504].includes(res.status)) { await new Promise(r => setTimeout(r, 250*(i+1))); continue; }\r\n      break;\r\n    } catch (e:any) {\r\n      clearTimeout(to);\r\n      lastErr = e?.name === 'AbortError' ? 'Request timed out' : (e?.message || e);\r\n      await new Promise(r => setTimeout(r, 250*(i+1)));\r\n    }\r\n  }\r\n  return { ok: false, error: String(lastErr || 'Network error') };\r\n}\r\n\r\nexport async function getJob(tag: string): Promise<GetJobResp> {\r\n  return fetchJson(`${BASE}/get?tag=${encodeURIComponent(tag)}`);\r\n}\r\n\r\nexport async function saveJob(job: any): Promise<SaveResp> {\r\n  return fetchJson(`${BASE}/save`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type':'application/json' },\r\n    body: JSON.stringify({ job })\r\n  });\r\n}\r\n\r\nexport async function progress(tag: string): Promise<ProgressResp> {\r\n  return fetchJson(`${BASE}/progress`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type':'application/json' },\r\n    body: JSON.stringify({ tag })\r\n  });\r\n}\r\n\r\nexport async function searchJobs(\r\n  opts?: string | { q?: string; status?: string; limit?: number; offset?: number }\r\n): Promise<SearchJobsResp> {\r\n  const o = typeof opts === 'string' ? { q: opts } : (opts || {});\r\n  const p = new URLSearchParams();\r\n  if (o.q) p.set('q', o.q);\r\n  if (o.status) p.set('status', o.status);\r\n  if (o.limit != null) p.set('limit', String(o.limit));\r\n  if (o.offset != null) p.set('offset', String(o.offset));\r\n  return fetchJson(`${BASE}/search?${p.toString()}`);\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA,MAAM,OAAO;AAOb,eAAe,UAAU,GAAW,EAAE,IAAkB;QAAE,WAAA,iEAAW,GAAG,YAAA,iEAAY;IAClF,IAAI,UAAe;IACnB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;QACjC,MAAM,OAAO,IAAI;QACjB,MAAM,KAAK,WAAW,IAAM,KAAK,KAAK,IAAI;QAC1C,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,KAAK;gBAAE,OAAO;gBAAY,GAAG,IAAI;gBAAE,QAAQ,KAAK,MAAM;YAAC;YAC/E,aAAa;YACb,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YAC7C,IAAI,IAAI,EAAE,EAAE,OAAO;YACnB,UAAU,CAAA,iBAAA,2BAAA,KAAM,KAAK,KAAI,AAAC,QAAkB,OAAX,IAAI,MAAM;YAC3C,qBAAqB;YACrB,IAAI;gBAAC;gBAAK;gBAAK;gBAAK;aAAI,CAAC,QAAQ,CAAC,IAAI,MAAM,GAAG;gBAAE,MAAM,IAAI,QAAQ,CAAA,IAAK,WAAW,GAAG,MAAI,CAAC,IAAE,CAAC;gBAAK;YAAU;YAC7G;QACF,EAAE,OAAO,GAAO;YACd,aAAa;YACb,UAAU,CAAA,cAAA,wBAAA,EAAG,IAAI,MAAK,eAAe,sBAAuB,CAAA,cAAA,wBAAA,EAAG,OAAO,KAAI;YAC1E,MAAM,IAAI,QAAQ,CAAA,IAAK,WAAW,GAAG,MAAI,CAAC,IAAE,CAAC;QAC/C;IACF;IACA,OAAO;QAAE,IAAI;QAAO,OAAO,OAAO,WAAW;IAAiB;AAChE;AAEO,eAAe,OAAO,GAAW;IACtC,OAAO,UAAU,AAAC,GAAkB,OAAhB,MAAK,aAAmC,OAAxB,mBAAmB;AACzD;AAEO,eAAe,QAAQ,GAAQ;IACpC,OAAO,UAAU,AAAC,GAAO,OAAL,MAAK,UAAQ;QAC/B,QAAQ;QACR,SAAS;YAAE,gBAAe;QAAmB;QAC7C,MAAM,KAAK,SAAS,CAAC;YAAE;QAAI;IAC7B;AACF;AAEO,eAAe,SAAS,GAAW;IACxC,OAAO,UAAU,AAAC,GAAO,OAAL,MAAK,cAAY;QACnC,QAAQ;QACR,SAAS;YAAE,gBAAe;QAAmB;QAC7C,MAAM,KAAK,SAAS,CAAC;YAAE;QAAI;IAC7B;AACF;AAEO,eAAe,WACpB,IAAgF;IAEhF,MAAM,IAAI,OAAO,SAAS,WAAW;QAAE,GAAG;IAAK,IAAK,QAAQ,CAAC;IAC7D,MAAM,IAAI,IAAI;IACd,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC;IACvB,IAAI,EAAE,MAAM,EAAE,EAAE,GAAG,CAAC,UAAU,EAAE,MAAM;IACtC,IAAI,EAAE,KAAK,IAAI,MAAM,EAAE,GAAG,CAAC,SAAS,OAAO,EAAE,KAAK;IAClD,IAAI,EAAE,MAAM,IAAI,MAAM,EAAE,GAAG,CAAC,UAAU,OAAO,EAAE,MAAM;IACrD,OAAO,UAAU,AAAC,GAAiB,OAAf,MAAK,YAAuB,OAAb,EAAE,QAAQ;AAC/C","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alyssa%20Janes/Desktop/deer-intake/app/admin/health/page.tsx"],"sourcesContent":["'use client';\r\nimport { useEffect, useState } from 'react';\r\nimport { getJob, progress, saveJob, searchJobs } from '@/lib/api';\r\n\r\ntype Row = { label: string; ok?: boolean; msg?: string; route?: string };\r\n\r\nexport default function HealthPage(){\r\n  const [rows, setRows] = useState<Row[]>([]);\r\n  const [env, setEnv] = useState<{ NEXT_PUBLIC_GAS_BASE?: string; GAS_BASE?: string }>({});\r\n\r\n  useEffect(() => {\r\n    setEnv({\r\n      NEXT_PUBLIC_GAS_BASE: process.env.NEXT_PUBLIC_GAS_BASE,\r\n      GAS_BASE: process.env.GAS_BASE as any\r\n    });\r\n\r\n    (async () => {\r\n      const out: Row[] = [];\r\n      // Search ping\r\n      try {\r\n        const r = await searchJobs('1');\r\n        out.push({ label:'GET /search', ok: !!r.ok, msg: r.ok?'ok':'fail' });\r\n      } catch (e:any){ out.push({ label:'GET /search', ok:false, msg:e?.message }); }\r\n\r\n      // Get\r\n      try {\r\n        const r = await getJob('1');\r\n        out.push({ label:'GET /get?tag=1', ok: !!r.ok, msg: r.ok? (r.exists?'exists':'not found') : (r.error||'fail') });\r\n      } catch (e:any){ out.push({ label:'GET /get', ok:false, msg:e?.message }); }\r\n\r\n      // Save (safe dummy)\r\n      try {\r\n        const r = await saveJob({ tag:'HEALTH-CHECK', status:'Dropped Off', dropoff:'2025-01-01', customer:'Health', phone:'0000000', email:'x@x', address:'-', city:'-', state:'-', zip:'-' , county:'-', sex:'Doe', processType:'Standard Processing' });\r\n        out.push({ label:'POST /save', ok: !!r.ok, msg: r.ok?'ok':(r.error||'fail') });\r\n      } catch (e:any){ out.push({ label:'POST /save', ok:false, msg:e?.message }); }\r\n\r\n      // Progress (harmless if tag missing)\r\n      try {\r\n        const r = await progress('HEALTH-CHECK');\r\n        out.push({ label:'POST /progress', ok: !!r.ok, msg: r.ok?(r.nextStatus||'ok'):(r.error||'fail') });\r\n      } catch (e:any){ out.push({ label:'POST /progress', ok:false, msg:e?.message }); }\r\n\r\n      setRows(out);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"page-wrap\">\r\n      <h2>Admin Health</h2>\r\n      <div className=\"card\" style={{margin:'8px 0'}}>\r\n        <div className=\"muted\" style={{marginBottom:8}}>Env</div>\r\n        <div><strong>NEXT_PUBLIC_GAS_BASE:</strong> {env.NEXT_PUBLIC_GAS_BASE || <em>(unset)</em>}</div>\r\n        <div><strong>GAS_BASE:</strong> {env.GAS_BASE || <em>(unset)</em>}</div>\r\n      </div>\r\n\r\n      <table className=\"tbl\" style={{marginTop:12}}>\r\n        <thead><tr><th>Check</th><th>Status</th></tr></thead>\r\n        <tbody>\r\n        {rows.map((r,i)=>(\r\n          <tr key={i}>\r\n            <td>{r.label}</td>\r\n            <td style={{color:r.ok?'#065f46':'#b91c1c', fontWeight:700}}>\r\n              {r.ok ? 'OK' : 'FAIL'} {r.msg? `â€” ${r.msg}`:''}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}